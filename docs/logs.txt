2020-03-13 15:10:15.518 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-13 15:10:33.292 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-13 15:10:33.569 +08:00 [INF] Loaded ABP modules:
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-13 15:10:33.570 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-13 15:10:33.570 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-13 15:10:33.571 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-13 15:10:33.571 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-13 15:10:33.571 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-13 15:10:33.571 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-13 15:10:33.571 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-13 15:10:33.571 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-13 15:10:33.571 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-13 15:10:33.571 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-13 15:10:33.571 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-13 15:10:33.571 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-13 15:10:33.573 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-13 15:10:33.574 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-13 15:10:33.574 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-13 15:10:33.574 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-13 15:10:33.574 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-13 15:10:34.519 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-13 15:10:34.632 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-13 15:10:35.870 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-13 15:10:35.870 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-13 15:10:35.870 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-13 15:10:35.870 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-13 15:10:35.870 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-13 15:10:35.870 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-13 15:10:37.712 +08:00 [INF] Initialized all ABP modules.
2020-03-13 15:10:38.092 +08:00 [INF] Now listening on: https://localhost:44379
2020-03-13 15:10:38.093 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-13 15:10:38.093 +08:00 [INF] Hosting environment: Development
2020-03-13 15:10:38.093 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-13 15:10:39.400 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/  
2020-03-13 15:10:39.558 +08:00 [DBG] Login Url: /Account/Login
2020-03-13 15:10:39.558 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-13 15:10:39.558 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-13 15:10:39.559 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-13 15:10:39.559 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-13 15:10:39.559 +08:00 [DBG] Error Url: /home/error
2020-03-13 15:10:39.559 +08:00 [DBG] Error Id Parameter: errorId
2020-03-13 15:10:42.482 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.098 +08:00 [INF] Executed DbCommand (240ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.455 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.479 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.584 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.612 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.627 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.649 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.666 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.671 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.679 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.682 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.689 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.695 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.698 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.701 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.704 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.710 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.713 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.716 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.720 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.725 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.728 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.732 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.735 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.741 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.744 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.748 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.751 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.754 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.761 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.765 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.768 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.771 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.778 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.782 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.786 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.793 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.797 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.801 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.806 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.811 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:44.814 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:44.818 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:45.668 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:46.054 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:10:46.667 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:10:47.015 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:47.032 +08:00 [INF] Executed DbCommand (16ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:10:47.035 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:47.041 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:47.043 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:10:47.045 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:10:47.131 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:10:47.240 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-13 15:10:47.501 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-13 15:10:47.514 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 0.7058ms.
2020-03-13 15:10:47.532 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-13 15:10:47.544 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 293.8099ms
2020-03-13 15:10:47.545 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:10:47.612 +08:00 [INF] Request finished in 8214.5428ms 302 
2020-03-13 15:10:47.613 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/swagger/index.html  
2020-03-13 15:10:47.726 +08:00 [INF] Request finished in 113.3538ms 200 text/html;charset=utf-8
2020-03-13 15:10:47.977 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/swagger/v1/swagger.json  
2020-03-13 15:10:48.399 +08:00 [INF] Request finished in 421.9438ms 200 application/json;charset=utf-8
2020-03-13 15:11:31.030 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:11:31.062 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:11:31.105 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:11:31.129 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:11:31.579 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:31.643 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [i].[Origin]
FROM [IdentityServerClientCorsOrigins] AS [i]
2020-03-13 15:11:31.760 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:11:31.762 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:11:31.764 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:11:31.765 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:11:32.307 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:11:32.307 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:11:32.314 +08:00 [DBG] Start token request.
2020-03-13 15:11:32.318 +08:00 [DBG] Start client validation
2020-03-13 15:11:32.326 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:11:32.328 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:11:32.339 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:11:32.339 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:11:32.352 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:32.681 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:11:33.074 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:11:33.100 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:11:33.100 +08:00 [DBG] Client validation success
2020-03-13 15:11:33.128 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ17:00000001","TimeStamp":"2020-03-13T07:11:33.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:11:33.139 +08:00 [DBG] Start token request validation
2020-03-13 15:11:33.160 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:11:33.207 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:33.336 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:11:33.392 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:33.561 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:11:33.769 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:33.789 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:11:33.793 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:33.869 +08:00 [INF] Executed DbCommand (74ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:11:33.941 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:33.961 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:11:33.977 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:11:34.036 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:11:34.039 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ17:00000001","TimeStamp":"2020-03-13T07:11:34.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:11:34.055 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:34.081 +08:00 [INF] Executed DbCommand (22ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:11:34.086 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ17:00000001","TimeStamp":"2020-03-13T07:11:34.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:11:34.086 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:11:34.100 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:11:34.127 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:11:34.128 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:11:34.144 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:34.147 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:11:34.173 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:11:34.383 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****iHBA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ17:00000001","TimeStamp":"2020-03-13T07:11:34.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:11:34.384 +08:00 [DBG] Token request success.
2020-03-13 15:11:34.416 +08:00 [INF] Request finished in 3387.3961ms 200 application/json; charset=UTF-8
2020-03-13 15:11:34.615 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:11:35.277 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44379/.well-known/openid-configuration  
2020-03-13 15:11:35.279 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:11:35.284 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-03-13 15:11:35.312 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-03-13 15:11:35.312 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-03-13 15:11:35.315 +08:00 [DBG] Start discovery request
2020-03-13 15:11:35.361 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:35.428 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE (@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:11:35.526 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:35.634 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE (@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:11:35.781 +08:00 [INF] Request finished in 503.1825ms 200 application/json; charset=UTF-8
2020-03-13 15:11:36.175 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44379/.well-known/openid-configuration/jwks  
2020-03-13 15:11:36.175 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:11:36.178 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-03-13 15:11:36.183 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-03-13 15:11:36.183 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-03-13 15:11:36.187 +08:00 [DBG] Start key discovery request
2020-03-13 15:11:36.226 +08:00 [INF] Request finished in 51.6061ms 200 application/jwk-set+json; charset=UTF-8
2020-03-13 15:11:36.436 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:11:36.451 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:11:36.453 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:11:36.458 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:11:36.514 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:11:36.769 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:11:36.814 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:11:36.823 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:11:36.825 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:11:36.848 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:11:36.879 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 364.7612ms
2020-03-13 15:11:36.879 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:11:37.091 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:37.507 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:11:37.566 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:11:37.572 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:11:37.663 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:11:37.663 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:11:37.674 +08:00 [INF] Request finished in 3059.1981ms 401 application/json; charset=utf-8
2020-03-13 15:11:38.246 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:11:38.247 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:11:38.259 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:11:38.259 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:11:38.259 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:11:38.265 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:11:38.272 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:11:38.272 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:11:38.272 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:11:38.273 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:11:38.287 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:11:38.287 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:11:38.287 +08:00 [DBG] Start token request.
2020-03-13 15:11:38.287 +08:00 [DBG] Start client validation
2020-03-13 15:11:38.287 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:11:38.287 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:11:38.288 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:11:38.288 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:11:38.295 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.375 +08:00 [INF] Executed DbCommand (65ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:11:38.385 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:11:38.385 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:11:38.385 +08:00 [DBG] Client validation success
2020-03-13 15:11:38.386 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1A:00000001","TimeStamp":"2020-03-13T07:11:38.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:11:38.386 +08:00 [DBG] Start token request validation
2020-03-13 15:11:38.387 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:11:38.389 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.399 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:11:38.401 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.433 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:11:38.440 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.443 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:11:38.446 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.449 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:11:38.454 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.461 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:11:38.464 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:11:38.486 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:11:38.486 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1A:00000001","TimeStamp":"2020-03-13T07:11:38.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:11:38.490 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.530 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:11:38.532 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1A:00000001","TimeStamp":"2020-03-13T07:11:38.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:11:38.532 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:11:38.532 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:11:38.533 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:11:38.533 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:11:38.537 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:38.580 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:11:38.598 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:11:38.605 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****qFlw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1A:00000001","TimeStamp":"2020-03-13T07:11:38.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:11:38.605 +08:00 [DBG] Token request success.
2020-03-13 15:11:38.607 +08:00 [INF] Request finished in 361.5284ms 200 application/json; charset=UTF-8
2020-03-13 15:11:38.964 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:11:38.986 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:11:38.987 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:11:38.987 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:11:39.000 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:11:39.004 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:11:39.133 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:11:39.140 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:11:39.140 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:11:39.141 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:11:39.141 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:11:39.142 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 138.4952ms
2020-03-13 15:11:39.142 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:11:39.154 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:11:39.179 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:11:39.184 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:11:39.189 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:11:39.191 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:11:39.191 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:11:39.192 +08:00 [INF] Request finished in 228.8187ms 401 application/json; charset=utf-8
2020-03-13 15:13:20.347 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:20.348 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:20.355 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:20.355 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:20.355 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:20.359 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:20.360 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:20.360 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:20.360 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:20.360 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:20.372 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:20.372 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:20.372 +08:00 [DBG] Start token request.
2020-03-13 15:13:20.372 +08:00 [DBG] Start client validation
2020-03-13 15:13:20.372 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:20.372 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:20.373 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:20.373 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:20.377 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.444 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:20.457 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:20.458 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:20.458 +08:00 [DBG] Client validation success
2020-03-13 15:13:20.458 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1C:00000001","TimeStamp":"2020-03-13T07:13:20.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:20.459 +08:00 [DBG] Start token request validation
2020-03-13 15:13:20.459 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:20.461 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.507 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:20.511 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.561 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:20.570 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.627 +08:00 [INF] Executed DbCommand (56ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:20.630 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.669 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:20.676 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.687 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:20.690 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:20.713 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:20.713 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1C:00000001","TimeStamp":"2020-03-13T07:13:20.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:20.717 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.748 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:20.755 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1C:00000001","TimeStamp":"2020-03-13T07:13:20.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:20.755 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:20.756 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:20.756 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:20.756 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:20.759 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.764 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:20.786 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:20.794 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****z0DA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1C:00000001","TimeStamp":"2020-03-13T07:13:20.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:20.794 +08:00 [DBG] Token request success.
2020-03-13 15:13:20.795 +08:00 [INF] Request finished in 448.7402ms 200 application/json; charset=UTF-8
2020-03-13 15:13:20.841 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:20.843 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:20.843 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:20.843 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:20.847 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:20.849 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:20.951 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:20.958 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:20.958 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:20.958 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:20.958 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:20.961 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 110.4149ms
2020-03-13 15:13:20.962 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:20.970 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:20.982 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:20.988 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:20.989 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:20.992 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:20.992 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:20.992 +08:00 [INF] Request finished in 151.2697ms 401 application/json; charset=utf-8
2020-03-13 15:13:27.463 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:27.464 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:27.471 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:27.472 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:27.472 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:27.486 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:27.488 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:27.488 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:27.488 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:27.489 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:27.511 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:27.511 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:27.512 +08:00 [DBG] Start token request.
2020-03-13 15:13:27.512 +08:00 [DBG] Start client validation
2020-03-13 15:13:27.512 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:27.512 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:27.513 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:27.513 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:27.519 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.603 +08:00 [INF] Executed DbCommand (59ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:27.613 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:27.613 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:27.613 +08:00 [DBG] Client validation success
2020-03-13 15:13:27.614 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1E:00000001","TimeStamp":"2020-03-13T07:13:27.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:27.614 +08:00 [DBG] Start token request validation
2020-03-13 15:13:27.614 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:27.620 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.634 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:27.637 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.690 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:27.697 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.715 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:27.720 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.769 +08:00 [INF] Executed DbCommand (47ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:27.774 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.792 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:27.801 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:27.824 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:27.824 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1E:00000001","TimeStamp":"2020-03-13T07:13:27.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:27.828 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.857 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:27.860 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1E:00000001","TimeStamp":"2020-03-13T07:13:27.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:27.860 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:27.860 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:27.861 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:27.861 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:27.864 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:27.870 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:27.884 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:27.894 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****nHuw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1E:00000001","TimeStamp":"2020-03-13T07:13:27.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:27.894 +08:00 [DBG] Token request success.
2020-03-13 15:13:27.899 +08:00 [INF] Request finished in 436.1674ms 200 application/json; charset=UTF-8
2020-03-13 15:13:27.987 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:27.992 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:27.992 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:27.992 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:27.997 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:28.001 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:28.116 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:28.126 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:28.126 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:28.126 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:28.127 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:28.128 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 126.8502ms
2020-03-13 15:13:28.128 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:28.145 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.184 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:28.213 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:28.238 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:28.244 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:28.244 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:28.246 +08:00 [INF] Request finished in 259.2349ms 401 application/json; charset=utf-8
2020-03-13 15:13:28.563 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:28.564 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:28.568 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:28.568 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:28.568 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:28.571 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:28.571 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:28.572 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:28.572 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:28.572 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:28.588 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:28.589 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:28.589 +08:00 [DBG] Start token request.
2020-03-13 15:13:28.589 +08:00 [DBG] Start client validation
2020-03-13 15:13:28.589 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:28.589 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:28.590 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:28.590 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:28.593 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.634 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:28.653 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:28.653 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:28.653 +08:00 [DBG] Client validation success
2020-03-13 15:13:28.654 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1G:00000001","TimeStamp":"2020-03-13T07:13:28.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:28.654 +08:00 [DBG] Start token request validation
2020-03-13 15:13:28.654 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:28.657 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.672 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:28.677 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.710 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:28.717 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.728 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:28.731 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.763 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:28.770 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.779 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:28.789 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:28.807 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:28.807 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1G:00000001","TimeStamp":"2020-03-13T07:13:28.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:28.810 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.830 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:28.831 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1G:00000001","TimeStamp":"2020-03-13T07:13:28.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:28.831 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:28.831 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:28.832 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:28.832 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:28.834 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:28.837 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:28.844 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:28.848 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****fk0A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1G:00000001","TimeStamp":"2020-03-13T07:13:28.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:28.848 +08:00 [DBG] Token request success.
2020-03-13 15:13:28.850 +08:00 [INF] Request finished in 286.662ms 200 application/json; charset=UTF-8
2020-03-13 15:13:28.881 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:28.884 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:28.885 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:28.885 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:28.890 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:28.892 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:29.001 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:29.008 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:29.009 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:29.009 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:29.009 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:29.010 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 118.3854ms
2020-03-13 15:13:29.010 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:29.019 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.059 +08:00 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:29.064 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:29.065 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:29.069 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:29.069 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:29.070 +08:00 [INF] Request finished in 188.9004ms 401 application/json; charset=utf-8
2020-03-13 15:13:29.359 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:29.360 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:29.363 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:29.363 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:29.363 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:29.367 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:29.367 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:29.367 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:29.368 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:29.368 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:29.380 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:29.380 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:29.380 +08:00 [DBG] Start token request.
2020-03-13 15:13:29.380 +08:00 [DBG] Start client validation
2020-03-13 15:13:29.380 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:29.380 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:29.381 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:29.381 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:29.385 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.458 +08:00 [INF] Executed DbCommand (67ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:29.471 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:29.471 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:29.471 +08:00 [DBG] Client validation success
2020-03-13 15:13:29.472 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1I:00000001","TimeStamp":"2020-03-13T07:13:29.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:29.472 +08:00 [DBG] Start token request validation
2020-03-13 15:13:29.473 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:29.476 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.506 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:29.526 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.592 +08:00 [INF] Executed DbCommand (54ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:29.611 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.621 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:29.626 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.637 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:29.669 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.686 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:29.706 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:29.731 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:29.731 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1I:00000001","TimeStamp":"2020-03-13T07:13:29.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:29.739 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.785 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:29.790 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1I:00000001","TimeStamp":"2020-03-13T07:13:29.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:29.790 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:29.791 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:29.791 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:29.791 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:29.807 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:29.835 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:29.845 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:29.854 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****YIzg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1I:00000001","TimeStamp":"2020-03-13T07:13:29.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:29.854 +08:00 [DBG] Token request success.
2020-03-13 15:13:29.856 +08:00 [INF] Request finished in 496.419ms 200 application/json; charset=UTF-8
2020-03-13 15:13:30.225 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:30.231 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:30.231 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:30.231 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:30.240 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:30.242 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:30.374 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:30.386 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:30.388 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:30.388 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:30.389 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:30.389 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:30.389 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:30.390 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 147.8972ms
2020-03-13 15:13:30.391 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:30.393 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:30.393 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:30.393 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:30.400 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.406 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:30.407 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:30.407 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:30.407 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:30.407 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:30.415 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:30.415 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:30.415 +08:00 [DBG] Start token request.
2020-03-13 15:13:30.415 +08:00 [DBG] Start client validation
2020-03-13 15:13:30.415 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:30.415 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:30.418 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:30.418 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:30.420 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.445 +08:00 [INF] Executed DbCommand (21ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:30.497 +08:00 [INF] Executed DbCommand (51ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:30.524 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:30.550 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:30.550 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:30.551 +08:00 [INF] Request finished in 326.3459ms 401 application/json; charset=utf-8
2020-03-13 15:13:30.566 +08:00 [INF] Executed DbCommand (62ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:30.572 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:30.572 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:30.572 +08:00 [DBG] Client validation success
2020-03-13 15:13:30.572 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1K:00000001","TimeStamp":"2020-03-13T07:13:30.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:30.573 +08:00 [DBG] Start token request validation
2020-03-13 15:13:30.573 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:30.575 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.582 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:30.585 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.611 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:30.615 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.619 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:30.621 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.626 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:30.630 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.640 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:30.644 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:30.673 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:30.673 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1K:00000001","TimeStamp":"2020-03-13T07:13:30.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:30.677 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.723 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:30.724 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1K:00000001","TimeStamp":"2020-03-13T07:13:30.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:30.724 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:30.725 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:30.725 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:30.725 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:30.728 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:30.772 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:30.788 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:30.794 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****dzQg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1K:00000001","TimeStamp":"2020-03-13T07:13:30.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:30.794 +08:00 [DBG] Token request success.
2020-03-13 15:13:30.795 +08:00 [INF] Request finished in 406.6255ms 200 application/json; charset=UTF-8
2020-03-13 15:13:30.821 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:30.823 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:30.823 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:30.824 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:30.827 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:30.829 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:30.947 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:31.003 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:31.003 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:31.003 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:31.004 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:31.005 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 175.8063ms
2020-03-13 15:13:31.005 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:31.039 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.056 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:31.064 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:31.065 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:31.068 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:31.068 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:31.068 +08:00 [INF] Request finished in 247.4769ms 401 application/json; charset=utf-8
2020-03-13 15:13:31.310 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:31.310 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:31.313 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:31.313 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:31.313 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:31.315 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:31.315 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:31.315 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:31.315 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:31.316 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:31.326 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:31.326 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:31.326 +08:00 [DBG] Start token request.
2020-03-13 15:13:31.326 +08:00 [DBG] Start client validation
2020-03-13 15:13:31.326 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:31.326 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:31.326 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:31.326 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:31.329 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.366 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:31.375 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:31.375 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:31.375 +08:00 [DBG] Client validation success
2020-03-13 15:13:31.376 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1M:00000001","TimeStamp":"2020-03-13T07:13:31.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:31.376 +08:00 [DBG] Start token request validation
2020-03-13 15:13:31.376 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:31.380 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.393 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:31.397 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.473 +08:00 [INF] Executed DbCommand (74ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:31.481 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.495 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:31.498 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.539 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:31.544 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.555 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:31.560 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:31.588 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:31.588 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1M:00000001","TimeStamp":"2020-03-13T07:13:31.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:31.653 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.701 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:31.706 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1M:00000001","TimeStamp":"2020-03-13T07:13:31.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:31.707 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:31.707 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:31.707 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:31.707 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:31.710 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:31.741 +08:00 [INF] Executed DbCommand (30ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:31.779 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:31.788 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****--yQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1M:00000001","TimeStamp":"2020-03-13T07:13:31.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:31.788 +08:00 [DBG] Token request success.
2020-03-13 15:13:31.789 +08:00 [INF] Request finished in 479.0717ms 200 application/json; charset=UTF-8
2020-03-13 15:13:32.124 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:32.126 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:32.127 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:32.127 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:32.131 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:32.132 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:32.211 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:32.220 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:32.221 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:32.221 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:32.221 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:32.222 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 89.7618ms
2020-03-13 15:13:32.223 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:32.231 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.256 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:32.263 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:32.269 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:32.277 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:32.277 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:32.278 +08:00 [INF] Request finished in 154.0415ms 401 application/json; charset=utf-8
2020-03-13 15:13:32.348 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:32.348 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:32.351 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:32.351 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:32.351 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:32.353 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:32.353 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:32.353 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:32.353 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:32.353 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:32.361 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:32.361 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:32.361 +08:00 [DBG] Start token request.
2020-03-13 15:13:32.361 +08:00 [DBG] Start client validation
2020-03-13 15:13:32.361 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:32.361 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:32.361 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:32.361 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:32.363 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.393 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:32.402 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:32.402 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:32.402 +08:00 [DBG] Client validation success
2020-03-13 15:13:32.403 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1O:00000001","TimeStamp":"2020-03-13T07:13:32.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:32.403 +08:00 [DBG] Start token request validation
2020-03-13 15:13:32.403 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:32.405 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.420 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:32.422 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.462 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:32.468 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.477 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:32.480 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.509 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:32.514 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.536 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:32.539 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:32.559 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:32.560 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1O:00000001","TimeStamp":"2020-03-13T07:13:32.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:32.563 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.590 +08:00 [INF] Executed DbCommand (22ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:32.591 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1O:00000001","TimeStamp":"2020-03-13T07:13:32.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:32.591 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:32.591 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:32.591 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:32.591 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:32.594 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.595 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:32.605 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:32.609 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****ILKg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1O:00000001","TimeStamp":"2020-03-13T07:13:32.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:32.610 +08:00 [DBG] Token request success.
2020-03-13 15:13:32.611 +08:00 [INF] Request finished in 262.5686ms 200 application/json; charset=UTF-8
2020-03-13 15:13:32.630 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:32.631 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:32.631 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:32.631 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:32.636 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:32.637 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:32.703 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:32.709 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:32.709 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:32.709 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:32.709 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:32.710 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 72.3403ms
2020-03-13 15:13:32.710 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:32.717 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:32.724 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:32.732 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:32.735 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:32.741 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:32.741 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:32.741 +08:00 [INF] Request finished in 111.7757ms 401 application/json; charset=utf-8
2020-03-13 15:13:33.105 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:33.105 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:33.108 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:33.108 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:33.108 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:33.111 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:33.111 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:33.112 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:33.112 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:33.112 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:33.125 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:33.125 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:33.125 +08:00 [DBG] Start token request.
2020-03-13 15:13:33.125 +08:00 [DBG] Start client validation
2020-03-13 15:13:33.125 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:33.125 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:33.126 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:33.126 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:33.128 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.191 +08:00 [INF] Executed DbCommand (59ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:33.200 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:33.201 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:33.201 +08:00 [DBG] Client validation success
2020-03-13 15:13:33.201 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1Q:00000001","TimeStamp":"2020-03-13T07:13:33.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:33.201 +08:00 [DBG] Start token request validation
2020-03-13 15:13:33.202 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:33.205 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.220 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:33.224 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.277 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:33.281 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.296 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:33.298 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.340 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:33.344 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.354 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:33.358 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:33.380 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:33.380 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1Q:00000001","TimeStamp":"2020-03-13T07:13:33.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:33.383 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.417 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:33.420 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1Q:00000001","TimeStamp":"2020-03-13T07:13:33.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:33.420 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:33.420 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:33.420 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:33.420 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:33.423 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.456 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:33.470 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:33.475 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****C2wg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1Q:00000001","TimeStamp":"2020-03-13T07:13:33.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:33.475 +08:00 [DBG] Token request success.
2020-03-13 15:13:33.476 +08:00 [INF] Request finished in 371.6407ms 200 application/json; charset=UTF-8
2020-03-13 15:13:33.524 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:33.527 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:33.527 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:33.528 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:33.530 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:33.531 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:33.601 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:33.607 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:33.607 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:33.607 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:33.607 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:33.608 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 76.5962ms
2020-03-13 15:13:33.608 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:33.613 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:33.624 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:33.628 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:33.629 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:33.631 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:33.631 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:33.632 +08:00 [INF] Request finished in 107.7076ms 401 application/json; charset=utf-8
2020-03-13 15:13:34.259 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:34.260 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:34.263 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:34.263 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:34.263 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:34.267 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:34.267 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:34.267 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:34.267 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:34.267 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:34.278 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:34.278 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:34.279 +08:00 [DBG] Start token request.
2020-03-13 15:13:34.279 +08:00 [DBG] Start client validation
2020-03-13 15:13:34.279 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:34.279 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:34.279 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:34.279 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:34.282 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.328 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:34.335 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:34.335 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:34.335 +08:00 [DBG] Client validation success
2020-03-13 15:13:34.335 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1S:00000001","TimeStamp":"2020-03-13T07:13:34.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:34.337 +08:00 [DBG] Start token request validation
2020-03-13 15:13:34.337 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:34.339 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.348 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:34.350 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.390 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:34.394 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.403 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:34.407 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.412 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:34.416 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.427 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:34.430 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:34.453 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:34.453 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1S:00000001","TimeStamp":"2020-03-13T07:13:34.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:34.456 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.489 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:34.491 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1S:00000001","TimeStamp":"2020-03-13T07:13:34.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:34.491 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:34.492 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:34.492 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:34.492 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:34.494 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.500 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:34.516 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:34.526 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****C50A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1S:00000001","TimeStamp":"2020-03-13T07:13:34.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:34.526 +08:00 [DBG] Token request success.
2020-03-13 15:13:34.527 +08:00 [INF] Request finished in 268.267ms 200 application/json; charset=UTF-8
2020-03-13 15:13:34.593 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:34.595 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:34.596 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:34.596 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:34.600 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:34.603 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:34.739 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:34.751 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:34.751 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:34.751 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:34.752 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:34.754 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 149.9731ms
2020-03-13 15:13:34.754 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:34.768 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:34.795 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:34.808 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:34.811 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:34.834 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:34.834 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:34.834 +08:00 [INF] Request finished in 241.2244ms 401 application/json; charset=utf-8
2020-03-13 15:13:35.128 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:35.129 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:35.131 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:35.131 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:35.131 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:35.133 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:35.134 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:35.134 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:35.134 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:35.134 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:35.143 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:35.143 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:35.144 +08:00 [DBG] Start token request.
2020-03-13 15:13:35.144 +08:00 [DBG] Start client validation
2020-03-13 15:13:35.144 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:35.144 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:35.144 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:35.144 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:35.146 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.181 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:35.186 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:35.186 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:35.186 +08:00 [DBG] Client validation success
2020-03-13 15:13:35.187 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ1U:00000001","TimeStamp":"2020-03-13T07:13:35.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:35.187 +08:00 [DBG] Start token request validation
2020-03-13 15:13:35.187 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:35.189 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.196 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:35.198 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.237 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:35.240 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.252 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:35.254 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.289 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:35.294 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.306 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:35.317 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:35.345 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:35.345 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1U:00000001","TimeStamp":"2020-03-13T07:13:35.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:35.363 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.390 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:35.392 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ1U:00000001","TimeStamp":"2020-03-13T07:13:35.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:35.392 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:35.392 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:35.392 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:35.392 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:35.394 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.396 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:35.406 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:35.411 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****SDCg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ1U:00000001","TimeStamp":"2020-03-13T07:13:35.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:35.411 +08:00 [DBG] Token request success.
2020-03-13 15:13:35.412 +08:00 [INF] Request finished in 284.0344ms 200 application/json; charset=UTF-8
2020-03-13 15:13:35.444 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:35.446 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:35.446 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:35.446 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:35.450 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:35.452 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:35.606 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:35.612 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:35.612 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:35.612 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:35.613 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:35.613 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 161.3705ms
2020-03-13 15:13:35.614 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:35.631 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.642 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:35.647 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:35.648 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:35.653 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:35.653 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:35.653 +08:00 [INF] Request finished in 209.6169ms 401 application/json; charset=utf-8
2020-03-13 15:13:35.903 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:35.903 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:35.905 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:35.905 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:35.905 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:35.907 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:35.908 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:35.908 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:35.908 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:35.908 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:35.915 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:35.915 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:35.916 +08:00 [DBG] Start token request.
2020-03-13 15:13:35.916 +08:00 [DBG] Start client validation
2020-03-13 15:13:35.916 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:35.916 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:35.917 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:35.917 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:35.919 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.955 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:35.961 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:35.961 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:35.961 +08:00 [DBG] Client validation success
2020-03-13 15:13:35.962 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ20:00000001","TimeStamp":"2020-03-13T07:13:35.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:35.962 +08:00 [DBG] Start token request validation
2020-03-13 15:13:35.962 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:35.965 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:35.986 +08:00 [INF] Executed DbCommand (19ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:35.989 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.052 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:36.057 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.070 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:36.072 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.125 +08:00 [INF] Executed DbCommand (51ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:36.129 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.139 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:36.142 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:36.164 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:36.164 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ20:00000001","TimeStamp":"2020-03-13T07:13:36.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:36.168 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.194 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:36.195 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ20:00000001","TimeStamp":"2020-03-13T07:13:36.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:36.195 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:36.196 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:36.196 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:36.196 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:36.199 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.205 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:36.223 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:36.234 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****RJSw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ20:00000001","TimeStamp":"2020-03-13T07:13:36.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:36.234 +08:00 [DBG] Token request success.
2020-03-13 15:13:36.236 +08:00 [INF] Request finished in 333.2035ms 200 application/json; charset=UTF-8
2020-03-13 15:13:36.623 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:36.625 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:36.625 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:36.625 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:36.629 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:36.630 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:36.735 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:36.740 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:36.741 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:36.741 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:36.741 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:36.742 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 111.8818ms
2020-03-13 15:13:36.742 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:36.752 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.764 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:36.771 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:36.774 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:36.777 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:36.777 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:36.777 +08:00 [INF] Request finished in 154.4201ms 401 application/json; charset=utf-8
2020-03-13 15:13:36.889 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:9527/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:13:36.890 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:13:36.892 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:36.892 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:36.892 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:36.894 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:13:36.894 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:13:36.895 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:13:36.895 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:13:36.895 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:13:36.904 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:13:36.904 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:13:36.905 +08:00 [DBG] Start token request.
2020-03-13 15:13:36.905 +08:00 [DBG] Start client validation
2020-03-13 15:13:36.905 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:13:36.905 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:13:36.906 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:13:36.906 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:13:36.907 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.942 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:13:36.945 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:13:36.946 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:13:36.946 +08:00 [DBG] Client validation success
2020-03-13 15:13:36.946 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73MH2OQ22:00000001","TimeStamp":"2020-03-13T07:13:36.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:13:36.946 +08:00 [DBG] Start token request validation
2020-03-13 15:13:36.946 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:13:36.948 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.957 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:36.960 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:36.999 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:37.006 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:37.017 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:13:37.020 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:37.084 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:13:37.098 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:37.112 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:37.138 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:13:37.162 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:13:37.162 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ22:00000001","TimeStamp":"2020-03-13T07:13:37.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:37.164 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:37.191 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:37.192 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73MH2OQ22:00000001","TimeStamp":"2020-03-13T07:13:37.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:13:37.192 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:13:37.192 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:13:37.193 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:13:37.193 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:13:37.194 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:37.197 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:13:37.207 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:13:37.212 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****ijLQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73MH2OQ22:00000001","TimeStamp":"2020-03-13T07:13:37.0000000Z","ProcessId":11176,"LocalIpAddress":"127.0.0.1:44379","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:13:37.212 +08:00 [DBG] Token request success.
2020-03-13 15:13:37.212 +08:00 [INF] Request finished in 323.5016ms 200 application/json; charset=UTF-8
2020-03-13 15:13:37.253 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:9527/api/identity/my-profile  
2020-03-13 15:13:37.256 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenInvalidIssuerException: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateIssuer(String issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateIssuer(String issuer, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-03-13 15:13:37.256 +08:00 [INF] BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:37.256 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10205: Issuer validation failed. Issuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. Did not match: validationParameters.ValidIssuer: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]' or validationParameters.ValidIssuers: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
2020-03-13 15:13:37.260 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:37.261 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:13:37.364 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:13:37.381 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:13:37.381 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:13:37.381 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:13:37.382 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:13:37.384 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 122.8348ms
2020-03-13 15:13:37.384 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:13:37.392 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:13:37.398 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:13:37.403 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:37.404 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:13:37.405 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:37.406 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:13:37.406 +08:00 [INF] Request finished in 153.0445ms 401 application/json; charset=utf-8
2020-03-13 15:20:30.849 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-13 15:20:48.156 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-13 15:20:48.554 +08:00 [INF] Loaded ABP modules:
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-13 15:20:48.555 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-13 15:20:48.555 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-13 15:20:48.556 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-13 15:20:48.556 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-13 15:20:49.625 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-13 15:20:49.739 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-13 15:20:51.293 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-13 15:20:51.293 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-13 15:20:51.293 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-13 15:20:51.293 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-13 15:20:51.293 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-13 15:20:51.293 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-13 15:20:53.263 +08:00 [INF] Initialized all ABP modules.
2020-03-13 15:20:53.682 +08:00 [INF] Now listening on: https://localhost:44379
2020-03-13 15:20:53.742 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-13 15:20:53.742 +08:00 [INF] Hosting environment: Development
2020-03-13 15:20:53.742 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-13 15:20:55.403 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/  
2020-03-13 15:20:55.672 +08:00 [DBG] Login Url: /Account/Login
2020-03-13 15:20:55.672 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-13 15:20:55.672 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-13 15:20:55.673 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-13 15:20:55.673 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-13 15:20:55.673 +08:00 [DBG] Error Url: /home/error
2020-03-13 15:20:55.673 +08:00 [DBG] Error Id Parameter: errorId
2020-03-13 15:20:58.972 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:00.829 +08:00 [INF] Executed DbCommand (264ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.164 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.186 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.271 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.288 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.290 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.292 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.298 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.301 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.304 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.307 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.313 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.316 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.321 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.333 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.336 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.354 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.358 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.368 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.371 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.384 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.388 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.398 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.402 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.416 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.419 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.430 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.433 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.442 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.455 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.467 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.475 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.487 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.490 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.493 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.497 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.499 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.502 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.504 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.506 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.508 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.511 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.514 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:01.988 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:01.997 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:21:02.002 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:02.005 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:02.007 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:21:02.009 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:21:02.222 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:21:02.456 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-13 15:21:02.811 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-13 15:21:02.821 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 1.679ms.
2020-03-13 15:21:02.833 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-13 15:21:02.843 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 378.297ms
2020-03-13 15:21:02.844 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:21:02.876 +08:00 [INF] Request finished in 7484.9645ms 302 
2020-03-13 15:21:02.894 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/swagger/index.html  
2020-03-13 15:21:03.026 +08:00 [INF] Request finished in 132.6364ms 200 text/html;charset=utf-8
2020-03-13 15:21:03.318 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/swagger/v1/swagger.json  
2020-03-13 15:21:03.707 +08:00 [INF] Request finished in 388.4958ms 200 application/json;charset=utf-8
2020-03-13 15:23:44.547 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/  
2020-03-13 15:23:44.571 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:23:44.574 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-13 15:23:44.707 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-13 15:23:44.707 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 0.1237ms.
2020-03-13 15:23:44.708 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-13 15:23:44.708 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 133.9903ms
2020-03-13 15:23:44.709 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:23:44.710 +08:00 [INF] Request finished in 163.5174ms 302 
2020-03-13 15:23:44.721 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/swagger/index.html  
2020-03-13 15:23:44.735 +08:00 [INF] Request finished in 14.1773ms 200 text/html;charset=utf-8
2020-03-13 15:23:45.162 +08:00 [INF] Request starting HTTP/2 GET https://localhost:44379/swagger/v1/swagger.json  
2020-03-13 15:23:45.328 +08:00 [INF] Request finished in 166.3148ms 200 application/json;charset=utf-8
2020-03-13 15:26:02.866 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-13 15:26:22.090 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-13 15:26:22.372 +08:00 [INF] Loaded ABP modules:
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-13 15:26:22.372 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-13 15:26:22.372 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-13 15:26:22.372 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-13 15:26:22.373 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-13 15:26:22.373 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-13 15:26:22.373 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-13 15:26:22.373 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-13 15:26:22.373 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-13 15:26:22.373 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-13 15:26:22.373 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-13 15:26:22.374 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-13 15:26:22.374 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-13 15:26:22.374 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-13 15:26:22.375 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-13 15:26:22.375 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-13 15:26:22.375 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-13 15:26:22.375 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-13 15:26:23.397 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-13 15:26:23.512 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-13 15:26:25.015 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-13 15:26:25.015 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-13 15:26:25.016 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-13 15:26:25.016 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-13 15:26:25.016 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-13 15:26:25.016 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-13 15:26:26.453 +08:00 [INF] Initialized all ABP modules.
2020-03-13 15:26:26.673 +08:00 [INF] Now listening on: http://localhost:44379
2020-03-13 15:26:26.674 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-13 15:26:26.674 +08:00 [INF] Hosting environment: Development
2020-03-13 15:26:26.674 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-13 15:26:27.684 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/  
2020-03-13 15:26:27.811 +08:00 [DBG] Login Url: /Account/Login
2020-03-13 15:26:27.811 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-13 15:26:27.811 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-13 15:26:27.811 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-13 15:26:27.811 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-13 15:26:27.812 +08:00 [DBG] Error Url: /home/error
2020-03-13 15:26:27.812 +08:00 [DBG] Error Id Parameter: errorId
2020-03-13 15:26:27.866 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:30.746 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:26:32.851 +08:00 [INF] Executed DbCommand (243ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:26:33.173 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:26:33.214 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:26:33.433 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:26:33.614 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-13 15:26:33.859 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-13 15:26:33.868 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 0.6583ms.
2020-03-13 15:26:33.881 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-13 15:26:33.890 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 265.7121ms
2020-03-13 15:26:33.891 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 15:26:33.947 +08:00 [INF] Request finished in 6269.7137ms 302 
2020-03-13 15:26:33.991 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger  
2020-03-13 15:26:33.997 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:34.001 +08:00 [INF] Request finished in 9.4281ms 301 
2020-03-13 15:26:34.004 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/index.html  
2020-03-13 15:26:34.009 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:34.055 +08:00 [INF] Request finished in 50.6491ms 200 text/html;charset=utf-8
2020-03-13 15:26:34.085 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/swagger-ui-standalone-preset.js  
2020-03-13 15:26:34.085 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/swagger-ui-bundle.js  
2020-03-13 15:26:34.085 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/swagger-ui.css  
2020-03-13 15:26:34.087 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:34.087 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:34.088 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:34.156 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2020-03-13 15:26:34.158 +08:00 [INF] Request finished in 72.9232ms 200 text/css
2020-03-13 15:26:34.163 +08:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2020-03-13 15:26:34.163 +08:00 [INF] Request finished in 77.9702ms 200 application/javascript
2020-03-13 15:26:34.180 +08:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2020-03-13 15:26:34.180 +08:00 [INF] Request finished in 94.9332ms 200 application/javascript
2020-03-13 15:26:34.429 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/v1/swagger.json  
2020-03-13 15:26:34.434 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:34.470 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/favicon-32x32.png  
2020-03-13 15:26:34.473 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:26:34.480 +08:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2020-03-13 15:26:34.480 +08:00 [INF] Request finished in 9.5353ms 200 image/png
2020-03-13 15:26:34.698 +08:00 [INF] Request finished in 268.8691ms 200 application/json;charset=utf-8
2020-03-13 15:27:39.154 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/connect/token  
2020-03-13 15:27:39.160 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:27:39.171 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:27:40.142 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.237 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.242 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.252 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.260 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.282 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.286 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.299 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.305 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.311 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.314 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.402 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.437 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.445 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.447 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.450 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.452 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.458 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.460 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.466 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.468 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.474 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.477 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.483 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.485 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.490 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.493 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.495 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.497 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.503 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.506 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.511 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.514 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.518 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.521 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.526 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.529 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.534 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.537 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.542 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.545 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.551 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:40.553 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:27:40.559 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 15:27:41.173 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:27:41.173 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:27:41.176 +08:00 [WRN] Invalid HTTP request for token endpoint
2020-03-13 15:27:41.214 +08:00 [INF] Request finished in 2059.7939ms 400 application/json; charset=UTF-8
2020-03-13 15:27:43.942 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/connect/token  
2020-03-13 15:27:43.945 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:27:43.952 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:27:43.987 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:27:43.988 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:27:43.988 +08:00 [WRN] Invalid HTTP request for token endpoint
2020-03-13 15:27:43.989 +08:00 [INF] Request finished in 47.8491ms 400 application/json; charset=UTF-8
2020-03-13 15:27:44.173 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/favicon.ico  
2020-03-13 15:27:44.175 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:27:44.182 +08:00 [INF] Request finished in 9.0681ms 404 
2020-03-13 15:27:46.618 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/connect/token  
2020-03-13 15:27:46.619 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:27:46.624 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:27:46.640 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:27:46.640 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:27:46.641 +08:00 [WRN] Invalid HTTP request for token endpoint
2020-03-13 15:27:46.642 +08:00 [INF] Request finished in 24.8076ms 400 application/json; charset=UTF-8
2020-03-13 15:27:59.912 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:27:59.935 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:27:59.939 +08:00 [INF] Request finished in 26.7063ms 204 
2020-03-13 15:27:59.948 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:27:59.948 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:27:59.950 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:27:59.966 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:00.904 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:01.016 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [i].[Origin]
FROM [IdentityServerClientCorsOrigins] AS [i]
2020-03-13 15:28:01.065 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:01.068 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:01.069 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:01.070 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:01.082 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:01.082 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:01.087 +08:00 [DBG] Start token request.
2020-03-13 15:28:01.091 +08:00 [DBG] Start client validation
2020-03-13 15:28:01.100 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:01.103 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:01.115 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:01.115 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:01.131 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:01.648 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:02.373 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:02.397 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:02.397 +08:00 [DBG] Client validation success
2020-03-13 15:28:02.424 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR885:00000002","TimeStamp":"2020-03-13T07:28:02.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:02.441 +08:00 [DBG] Start token request validation
2020-03-13 15:28:02.462 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:02.508 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:02.655 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:02.703 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:02.882 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:03.107 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:03.117 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:03.119 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:03.149 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:03.480 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:03.520 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:03.636 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:03.704 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:03.706 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR885:00000002","TimeStamp":"2020-03-13T07:28:03.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:03.765 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:03.915 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:03.925 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR885:00000002","TimeStamp":"2020-03-13T07:28:03.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:03.925 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:03.949 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:03.998 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:04.000 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:04.020 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:04.055 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:04.196 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:04.350 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****VvFQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR885:00000002","TimeStamp":"2020-03-13T07:28:04.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:04.351 +08:00 [DBG] Token request success.
2020-03-13 15:28:04.361 +08:00 [INF] Request finished in 4413.0066ms 200 application/json; charset=UTF-8
2020-03-13 15:28:06.171 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:28:06.172 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:06.173 +08:00 [INF] Request finished in 2.1808ms 204 
2020-03-13 15:28:06.177 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:06.178 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:06.783 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/.well-known/openid-configuration  
2020-03-13 15:28:06.785 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:28:06.787 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-03-13 15:28:06.799 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-03-13 15:28:06.800 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-03-13 15:28:06.803 +08:00 [DBG] Start discovery request
2020-03-13 15:28:06.865 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:06.924 +08:00 [INF] Executed DbCommand (19ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE (@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:07.038 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.136 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE (@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:07.262 +08:00 [INF] Request finished in 478.5065ms 200 application/json; charset=UTF-8
2020-03-13 15:28:07.537 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/.well-known/openid-configuration/jwks  
2020-03-13 15:28:07.537 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:28:07.539 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-03-13 15:28:07.546 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-03-13 15:28:07.546 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-03-13 15:28:07.550 +08:00 [DBG] Start key discovery request
2020-03-13 15:28:07.598 +08:00 [INF] Request finished in 61.7064ms 200 application/jwk-set+json; charset=UTF-8
2020-03-13 15:28:07.812 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:07.824 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:07.829 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:07.840 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:07.840 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:07.840 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:07.840 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:07.847 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.855 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.862 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.870 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.873 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.883 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.887 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.903 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.918 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.925 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.929 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.931 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.934 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.937 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.940 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.943 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.946 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.949 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.952 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.954 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.958 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:07.962 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-13 15:28:07.970 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:07.970 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:07.971 +08:00 [DBG] Start token request.
2020-03-13 15:28:07.971 +08:00 [DBG] Start client validation
2020-03-13 15:28:07.971 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:07.971 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:07.972 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:07.972 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:07.974 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.037 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:08.049 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:08.050 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:08.050 +08:00 [DBG] Client validation success
2020-03-13 15:28:08.050 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR885:00000004","TimeStamp":"2020-03-13T07:28:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:08.050 +08:00 [DBG] Start token request validation
2020-03-13 15:28:08.051 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:08.054 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.088 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:08.091 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.135 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:08.140 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.151 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:08.154 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.187 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:08.192 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.202 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:08.206 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:08.241 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:08.241 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR885:00000004","TimeStamp":"2020-03-13T07:28:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:08.251 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.313 +08:00 [INF] Executed DbCommand (53ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:08.315 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR885:00000004","TimeStamp":"2020-03-13T07:28:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:08.316 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:08.316 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:08.317 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:08.317 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:08.319 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:08.366 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:08.416 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:08.424 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****kaLg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR885:00000004","TimeStamp":"2020-03-13T07:28:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:08.424 +08:00 [DBG] Token request success.
2020-03-13 15:28:08.424 +08:00 [INF] Request finished in 2247.7197ms 200 application/json; charset=UTF-8
2020-03-13 15:28:09.500 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:09.500 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:09.506 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:09.506 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:09.513 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:09.514 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:09.514 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:09.514 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:09.515 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:09.529 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:09.529 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:09.529 +08:00 [DBG] Start token request.
2020-03-13 15:28:09.529 +08:00 [DBG] Start client validation
2020-03-13 15:28:09.530 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:09.530 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:09.531 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:09.531 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:09.534 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.574 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:09.584 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:09.585 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:09.585 +08:00 [DBG] Client validation success
2020-03-13 15:28:09.585 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR885:00000005","TimeStamp":"2020-03-13T07:28:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:09.585 +08:00 [DBG] Start token request validation
2020-03-13 15:28:09.586 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:09.588 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.600 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:09.604 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.640 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:09.646 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.656 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:09.659 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.701 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:09.706 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.718 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:09.722 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:09.745 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:09.745 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR885:00000005","TimeStamp":"2020-03-13T07:28:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:09.749 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.775 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:09.778 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR885:00000005","TimeStamp":"2020-03-13T07:28:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:09.778 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:09.778 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:09.778 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:09.778 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:09.781 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:09.783 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:09.798 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:09.806 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****n0Rg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR885:00000005","TimeStamp":"2020-03-13T07:28:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:09.807 +08:00 [DBG] Token request success.
2020-03-13 15:28:09.808 +08:00 [INF] Request finished in 308.513ms 200 application/json; charset=UTF-8
2020-03-13 15:28:10.635 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:10.636 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:10.641 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:10.642 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:10.646 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:10.647 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:10.647 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:10.647 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:10.647 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:10.671 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:10.672 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:10.672 +08:00 [DBG] Start token request.
2020-03-13 15:28:10.672 +08:00 [DBG] Start client validation
2020-03-13 15:28:10.672 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:10.672 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:10.673 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:10.673 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:10.678 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.736 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:10.756 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:10.756 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:10.756 +08:00 [DBG] Client validation success
2020-03-13 15:28:10.757 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88A:00000001","TimeStamp":"2020-03-13T07:28:10.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:10.757 +08:00 [DBG] Start token request validation
2020-03-13 15:28:10.757 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:10.761 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.772 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:10.774 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.801 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:10.806 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.815 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:10.817 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.823 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:10.829 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.839 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:10.842 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:10.865 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:10.866 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000001","TimeStamp":"2020-03-13T07:28:10.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:10.869 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.900 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:10.902 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000001","TimeStamp":"2020-03-13T07:28:10.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:10.902 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:10.903 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:10.903 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:10.903 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:10.905 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:10.930 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:10.941 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:10.948 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****LpmA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000001","TimeStamp":"2020-03-13T07:28:10.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:10.948 +08:00 [DBG] Token request success.
2020-03-13 15:28:10.950 +08:00 [INF] Request finished in 314.5413ms 200 application/json; charset=UTF-8
2020-03-13 15:28:11.884 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:28:11.884 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:11.886 +08:00 [INF] Request finished in 2.3241ms 204 
2020-03-13 15:28:11.892 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:11.893 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:11.898 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:11.898 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:11.902 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:11.903 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:11.903 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:11.903 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:11.904 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:11.919 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:11.919 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:11.920 +08:00 [DBG] Start token request.
2020-03-13 15:28:11.920 +08:00 [DBG] Start client validation
2020-03-13 15:28:11.920 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:11.920 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:11.922 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:11.923 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:11.928 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:11.988 +08:00 [INF] Executed DbCommand (51ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:11.998 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:11.998 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:11.999 +08:00 [DBG] Client validation success
2020-03-13 15:28:11.999 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88A:00000003","TimeStamp":"2020-03-13T07:28:11.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:11.999 +08:00 [DBG] Start token request validation
2020-03-13 15:28:11.999 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:12.002 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:12.013 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:12.016 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:12.050 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:12.055 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:12.066 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:12.068 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:12.098 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:12.104 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:12.115 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:12.119 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:12.154 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:12.154 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000003","TimeStamp":"2020-03-13T07:28:12.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:12.185 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:12.222 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:12.224 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000003","TimeStamp":"2020-03-13T07:28:12.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:12.224 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:12.225 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:12.225 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:12.225 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:12.229 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:12.265 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:12.280 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:12.286 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****0QVA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000003","TimeStamp":"2020-03-13T07:28:12.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:12.286 +08:00 [DBG] Token request success.
2020-03-13 15:28:12.287 +08:00 [INF] Request finished in 395.3162ms 200 application/json; charset=UTF-8
2020-03-13 15:28:12.942 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:12.942 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:12.947 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:12.947 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:12.957 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:12.957 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:12.957 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:12.957 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:12.958 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:12.974 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:12.974 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:12.974 +08:00 [DBG] Start token request.
2020-03-13 15:28:12.974 +08:00 [DBG] Start client validation
2020-03-13 15:28:12.974 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:12.975 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:12.975 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:12.975 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:12.981 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.050 +08:00 [INF] Executed DbCommand (59ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:13.065 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:13.065 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:13.065 +08:00 [DBG] Client validation success
2020-03-13 15:28:13.066 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88A:00000004","TimeStamp":"2020-03-13T07:28:13.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:13.066 +08:00 [DBG] Start token request validation
2020-03-13 15:28:13.067 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:13.070 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.086 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:13.090 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.134 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:13.144 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.156 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:13.161 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.192 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:13.202 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.214 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:13.232 +08:00 [INF] Executed DbCommand (16ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:13.253 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:13.254 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000004","TimeStamp":"2020-03-13T07:28:13.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:13.259 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.288 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:13.290 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000004","TimeStamp":"2020-03-13T07:28:13.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:13.291 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:13.291 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:13.291 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:13.291 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:13.294 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:13.321 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:13.335 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:13.341 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****2WyQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000004","TimeStamp":"2020-03-13T07:28:13.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:13.341 +08:00 [DBG] Token request success.
2020-03-13 15:28:13.343 +08:00 [INF] Request finished in 401.0395ms 200 application/json; charset=UTF-8
2020-03-13 15:28:14.209 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:14.210 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:14.214 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:14.214 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:14.217 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:14.217 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:14.218 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:14.218 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:14.218 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:14.229 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:14.229 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:14.229 +08:00 [DBG] Start token request.
2020-03-13 15:28:14.229 +08:00 [DBG] Start client validation
2020-03-13 15:28:14.229 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:14.229 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:14.231 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:14.231 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:14.234 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.309 +08:00 [INF] Executed DbCommand (68ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:14.315 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:14.315 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:14.315 +08:00 [DBG] Client validation success
2020-03-13 15:28:14.316 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88A:00000005","TimeStamp":"2020-03-13T07:28:14.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:14.316 +08:00 [DBG] Start token request validation
2020-03-13 15:28:14.316 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:14.319 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.329 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:14.332 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.368 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:14.373 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.377 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:14.380 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.385 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:14.390 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.404 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:14.408 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:14.442 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:14.442 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000005","TimeStamp":"2020-03-13T07:28:14.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:14.447 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.495 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:14.497 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000005","TimeStamp":"2020-03-13T07:28:14.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:14.497 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:14.498 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:14.498 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:14.498 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:14.501 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:14.540 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:14.554 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:14.561 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****b01Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000005","TimeStamp":"2020-03-13T07:28:14.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:14.561 +08:00 [DBG] Token request success.
2020-03-13 15:28:14.563 +08:00 [INF] Request finished in 354.27ms 200 application/json; charset=UTF-8
2020-03-13 15:28:15.714 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:15.715 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:15.719 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:15.719 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:15.723 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:15.725 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:15.725 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:15.725 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:15.725 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:15.739 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:15.739 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:15.739 +08:00 [DBG] Start token request.
2020-03-13 15:28:15.739 +08:00 [DBG] Start client validation
2020-03-13 15:28:15.739 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:15.739 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:15.740 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:15.740 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:15.744 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:15.819 +08:00 [INF] Executed DbCommand (66ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:15.848 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:15.849 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:15.849 +08:00 [DBG] Client validation success
2020-03-13 15:28:15.849 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88A:00000006","TimeStamp":"2020-03-13T07:28:15.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:15.849 +08:00 [DBG] Start token request validation
2020-03-13 15:28:15.849 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:15.853 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:15.865 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:15.869 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:15.906 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:15.912 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:15.920 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:15.923 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:15.929 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:15.934 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:15.942 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:15.947 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:15.973 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:15.973 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000006","TimeStamp":"2020-03-13T07:28:15.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:15.980 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.026 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:16.031 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000006","TimeStamp":"2020-03-13T07:28:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:16.031 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:16.031 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:16.032 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:16.032 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:16.035 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.073 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:16.091 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:16.100 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****zF_A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000006","TimeStamp":"2020-03-13T07:28:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:16.100 +08:00 [DBG] Token request success.
2020-03-13 15:28:16.102 +08:00 [INF] Request finished in 387.1053ms 200 application/json; charset=UTF-8
2020-03-13 15:28:16.273 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:16.273 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:16.276 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:16.276 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:16.279 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:16.279 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:16.279 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:16.279 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:16.280 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:16.296 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:16.296 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:16.296 +08:00 [DBG] Start token request.
2020-03-13 15:28:16.296 +08:00 [DBG] Start client validation
2020-03-13 15:28:16.296 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:16.296 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:16.297 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:16.297 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:16.301 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.367 +08:00 [INF] Executed DbCommand (62ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:16.374 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:16.375 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:16.375 +08:00 [DBG] Client validation success
2020-03-13 15:28:16.375 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88A:00000007","TimeStamp":"2020-03-13T07:28:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:16.375 +08:00 [DBG] Start token request validation
2020-03-13 15:28:16.375 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:16.379 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.389 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:16.391 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.424 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:16.431 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.434 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:16.436 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.439 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:16.447 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.456 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:16.459 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:16.486 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:16.486 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000007","TimeStamp":"2020-03-13T07:28:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:16.490 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.526 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:16.530 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000007","TimeStamp":"2020-03-13T07:28:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:16.530 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:16.531 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:16.531 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:16.531 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:16.534 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:16.567 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:16.583 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:16.589 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****NZpQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88A:00000007","TimeStamp":"2020-03-13T07:28:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:16.589 +08:00 [DBG] Token request success.
2020-03-13 15:28:16.590 +08:00 [INF] Request finished in 317.6776ms 200 application/json; charset=UTF-8
2020-03-13 15:28:21.767 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/connect/token  
2020-03-13 15:28:21.770 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:28:21.773 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:21.795 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:21.795 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:21.795 +08:00 [WRN] Invalid HTTP request for token endpoint
2020-03-13 15:28:21.797 +08:00 [INF] Request finished in 30.061ms 400 application/json; charset=UTF-8
2020-03-13 15:28:25.808 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:28:25.808 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:25.809 +08:00 [INF] Request finished in 1.2078ms 204 
2020-03-13 15:28:25.813 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:25.813 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:25.817 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:25.817 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:25.820 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:25.820 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:25.820 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:25.820 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:25.821 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:25.836 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:25.836 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:25.836 +08:00 [DBG] Start token request.
2020-03-13 15:28:25.836 +08:00 [DBG] Start client validation
2020-03-13 15:28:25.836 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:25.836 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:25.837 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:25.837 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:25.909 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:25.955 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:25.959 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:25.960 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:25.960 +08:00 [DBG] Client validation success
2020-03-13 15:28:25.961 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88J:00000002","TimeStamp":"2020-03-13T07:28:25.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:25.961 +08:00 [DBG] Start token request validation
2020-03-13 15:28:25.961 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:25.964 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:25.972 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:25.974 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:26.005 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:26.009 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:26.012 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:26.014 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:26.017 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:26.021 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:26.032 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:26.035 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:26.068 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:26.069 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88J:00000002","TimeStamp":"2020-03-13T07:28:26.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:26.073 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:26.111 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:26.113 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88J:00000002","TimeStamp":"2020-03-13T07:28:26.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:26.113 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:26.113 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:26.114 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:26.114 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:26.117 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:26.121 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:26.138 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:26.148 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****jKjQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88J:00000002","TimeStamp":"2020-03-13T07:28:26.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:26.148 +08:00 [DBG] Token request success.
2020-03-13 15:28:26.151 +08:00 [INF] Request finished in 338.276ms 200 application/json; charset=UTF-8
2020-03-13 15:28:27.506 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:27.506 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:27.509 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:27.509 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:27.513 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:27.514 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:27.514 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:27.514 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:27.514 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:27.527 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:27.527 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:27.527 +08:00 [DBG] Start token request.
2020-03-13 15:28:27.527 +08:00 [DBG] Start client validation
2020-03-13 15:28:27.527 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:27.527 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:27.528 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:27.528 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:27.531 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.537 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:27.542 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:27.543 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:27.543 +08:00 [DBG] Client validation success
2020-03-13 15:28:27.543 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88J:00000003","TimeStamp":"2020-03-13T07:28:27.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:27.543 +08:00 [DBG] Start token request validation
2020-03-13 15:28:27.543 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:27.546 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.550 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:27.553 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.558 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:27.563 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.567 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:27.570 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.574 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:27.580 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.584 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:27.589 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:27.622 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:27.622 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88J:00000003","TimeStamp":"2020-03-13T07:28:27.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:27.626 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.632 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:27.634 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88J:00000003","TimeStamp":"2020-03-13T07:28:27.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:27.634 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:27.635 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:27.635 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:27.635 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:27.638 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:27.642 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:27.659 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:27.671 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****t_vw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88J:00000003","TimeStamp":"2020-03-13T07:28:27.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:27.671 +08:00 [DBG] Token request success.
2020-03-13 15:28:27.673 +08:00 [INF] Request finished in 167.154ms 200 application/json; charset=UTF-8
2020-03-13 15:28:30.731 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:28:30.732 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:28:30.735 +08:00 [INF] Successfully validated the token.
2020-03-13 15:28:30.735 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:28:30.739 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:28:30.740 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:28:30.740 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:28:30.740 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:28:30.740 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:28:30.754 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:28:30.754 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:28:30.754 +08:00 [DBG] Start token request.
2020-03-13 15:28:30.754 +08:00 [DBG] Start client validation
2020-03-13 15:28:30.755 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:28:30.755 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:28:30.755 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:28:30.755 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:28:30.759 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.765 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:28:30.771 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:28:30.771 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:28:30.771 +08:00 [DBG] Client validation success
2020-03-13 15:28:30.772 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88M:00000001","TimeStamp":"2020-03-13T07:28:30.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:28:30.772 +08:00 [DBG] Start token request validation
2020-03-13 15:28:30.772 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:28:30.774 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.779 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:30.782 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.786 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:30.790 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.795 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:28:30.798 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.803 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:28:30.809 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.814 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:30.819 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:28:30.854 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:28:30.854 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88M:00000001","TimeStamp":"2020-03-13T07:28:30.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:30.858 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.863 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:30.865 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88M:00000001","TimeStamp":"2020-03-13T07:28:30.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:28:30.865 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:28:30.865 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:28:30.865 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:28:30.866 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:28:30.868 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:28:30.874 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:28:30.881 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:28:30.891 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****pUeg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88M:00000001","TimeStamp":"2020-03-13T07:28:30.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:28:30.891 +08:00 [DBG] Token request success.
2020-03-13 15:28:30.893 +08:00 [INF] Request finished in 161.4255ms 200 application/json; charset=UTF-8
2020-03-13 15:29:48.920 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:29:48.921 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:29:48.921 +08:00 [INF] Request finished in 0.8938ms 204 
2020-03-13 15:29:48.924 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:29:48.924 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:29:48.926 +08:00 [INF] Successfully validated the token.
2020-03-13 15:29:48.927 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:29:48.929 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:29:48.930 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:29:48.930 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:29:48.930 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:29:48.931 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:29:48.950 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:29:48.950 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:29:48.951 +08:00 [DBG] Start token request.
2020-03-13 15:29:48.951 +08:00 [DBG] Start client validation
2020-03-13 15:29:48.951 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:29:48.951 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:29:48.951 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:29:48.951 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:29:48.954 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.015 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:29:49.033 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:29:49.033 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:29:49.033 +08:00 [DBG] Client validation success
2020-03-13 15:29:49.034 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88O:00000002","TimeStamp":"2020-03-13T07:29:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:29:49.034 +08:00 [DBG] Start token request validation
2020-03-13 15:29:49.034 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:29:49.037 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.048 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:29:49.052 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.104 +08:00 [INF] Executed DbCommand (51ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:29:49.112 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.133 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:29:49.136 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.185 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:29:49.204 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.215 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:29:49.219 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:29:49.245 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:29:49.245 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88O:00000002","TimeStamp":"2020-03-13T07:29:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:29:49.248 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.280 +08:00 [INF] Executed DbCommand (30ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:29:49.283 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88O:00000002","TimeStamp":"2020-03-13T07:29:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:29:49.283 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:29:49.283 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:29:49.283 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:29:49.284 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:29:49.286 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:49.290 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:29:49.304 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:29:49.311 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****rMBw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88O:00000002","TimeStamp":"2020-03-13T07:29:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:29:49.311 +08:00 [DBG] Token request success.
2020-03-13 15:29:49.313 +08:00 [INF] Request finished in 388.5833ms 200 application/json; charset=UTF-8
2020-03-13 15:29:56.777 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:29:56.777 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:29:56.778 +08:00 [INF] Request finished in 0.5276ms 204 
2020-03-13 15:29:56.963 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:29:56.964 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:29:56.965 +08:00 [INF] Successfully validated the token.
2020-03-13 15:29:56.965 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:29:56.966 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:29:56.967 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:29:56.967 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:29:56.967 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:29:56.967 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:29:56.972 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:29:56.972 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:29:56.972 +08:00 [DBG] Start token request.
2020-03-13 15:29:56.972 +08:00 [DBG] Start client validation
2020-03-13 15:29:56.972 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:29:56.972 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:29:56.973 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:29:56.973 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:29:56.974 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.057 +08:00 [INF] Executed DbCommand (54ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:29:57.069 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:29:57.069 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:29:57.069 +08:00 [DBG] Client validation success
2020-03-13 15:29:57.069 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88Q:00000002","TimeStamp":"2020-03-13T07:29:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:29:57.070 +08:00 [DBG] Start token request validation
2020-03-13 15:29:57.070 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:29:57.071 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.083 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:29:57.084 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.134 +08:00 [INF] Executed DbCommand (49ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:29:57.137 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.142 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:29:57.146 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.165 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:29:57.168 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.172 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:29:57.173 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:29:57.187 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:29:57.187 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88Q:00000002","TimeStamp":"2020-03-13T07:29:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:29:57.189 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.210 +08:00 [INF] Executed DbCommand (20ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:29:57.214 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88Q:00000002","TimeStamp":"2020-03-13T07:29:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:29:57.214 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:29:57.215 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:29:57.215 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:29:57.215 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:29:57.216 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:29:57.219 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:29:57.231 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:29:57.236 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****Memw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88Q:00000002","TimeStamp":"2020-03-13T07:29:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:29:57.236 +08:00 [DBG] Token request success.
2020-03-13 15:29:57.237 +08:00 [INF] Request finished in 273.7593ms 200 application/json; charset=UTF-8
2020-03-13 15:30:18.378 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:30:18.379 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:30:18.380 +08:00 [INF] Request finished in 1.0498ms 204 
2020-03-13 15:30:18.387 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:30:18.387 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:30:18.390 +08:00 [INF] Successfully validated the token.
2020-03-13 15:30:18.390 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:30:18.392 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:30:18.393 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:30:18.393 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:30:18.393 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:30:18.393 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:30:18.410 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:30:18.410 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:30:18.410 +08:00 [DBG] Start token request.
2020-03-13 15:30:18.410 +08:00 [DBG] Start client validation
2020-03-13 15:30:18.411 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:30:18.411 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:30:18.411 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:30:18.411 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:30:18.414 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.497 +08:00 [INF] Executed DbCommand (74ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:30:18.561 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:30:18.561 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:30:18.561 +08:00 [DBG] Client validation success
2020-03-13 15:30:18.561 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88S:00000002","TimeStamp":"2020-03-13T07:30:18.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:30:18.561 +08:00 [DBG] Start token request validation
2020-03-13 15:30:18.562 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:30:18.564 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.572 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:18.574 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.606 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:18.610 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.614 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:18.616 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.620 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:18.624 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.632 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:18.656 +08:00 [INF] Executed DbCommand (23ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:18.677 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:30:18.677 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88S:00000002","TimeStamp":"2020-03-13T07:30:18.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:18.681 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.712 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:18.715 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88S:00000002","TimeStamp":"2020-03-13T07:30:18.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:18.715 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:30:18.715 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:30:18.716 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:30:18.716 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:30:18.718 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:18.751 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:18.764 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:30:18.770 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****T65w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88S:00000002","TimeStamp":"2020-03-13T07:30:18.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:30:18.770 +08:00 [DBG] Token request success.
2020-03-13 15:30:18.771 +08:00 [INF] Request finished in 383.9464ms 200 application/json; charset=UTF-8
2020-03-13 15:30:20.929 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:30:20.930 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:30:20.933 +08:00 [INF] Successfully validated the token.
2020-03-13 15:30:20.933 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:30:20.935 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:30:20.935 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:30:20.935 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:30:20.935 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:30:20.935 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:30:20.958 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:30:20.958 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:30:20.958 +08:00 [DBG] Start token request.
2020-03-13 15:30:20.958 +08:00 [DBG] Start client validation
2020-03-13 15:30:20.958 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:30:20.958 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:30:20.959 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:30:20.959 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:30:20.961 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.038 +08:00 [INF] Executed DbCommand (54ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:30:21.041 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:30:21.042 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:30:21.042 +08:00 [DBG] Client validation success
2020-03-13 15:30:21.042 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88U:00000001","TimeStamp":"2020-03-13T07:30:21.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:30:21.042 +08:00 [DBG] Start token request validation
2020-03-13 15:30:21.042 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:30:21.047 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.056 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:21.060 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.099 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:21.102 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.105 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:21.107 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.109 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:21.115 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.122 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:21.124 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:21.147 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:30:21.147 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000001","TimeStamp":"2020-03-13T07:30:21.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:21.150 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.181 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:21.182 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000001","TimeStamp":"2020-03-13T07:30:21.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:21.182 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:30:21.182 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:30:21.183 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:30:21.183 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:30:21.184 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:21.210 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:21.220 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:30:21.226 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****5SDg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000001","TimeStamp":"2020-03-13T07:30:21.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:30:21.228 +08:00 [DBG] Token request success.
2020-03-13 15:30:21.229 +08:00 [INF] Request finished in 299.4452ms 200 application/json; charset=UTF-8
2020-03-13 15:30:22.330 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:30:22.330 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:30:22.333 +08:00 [INF] Successfully validated the token.
2020-03-13 15:30:22.334 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:30:22.336 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:30:22.336 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:30:22.337 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:30:22.337 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:30:22.337 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:30:22.351 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:30:22.351 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:30:22.351 +08:00 [DBG] Start token request.
2020-03-13 15:30:22.351 +08:00 [DBG] Start client validation
2020-03-13 15:30:22.351 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:30:22.351 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:30:22.352 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:30:22.352 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:30:22.355 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.422 +08:00 [INF] Executed DbCommand (64ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:30:22.441 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:30:22.441 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:30:22.441 +08:00 [DBG] Client validation success
2020-03-13 15:30:22.441 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88U:00000002","TimeStamp":"2020-03-13T07:30:22.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:30:22.442 +08:00 [DBG] Start token request validation
2020-03-13 15:30:22.442 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:30:22.445 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.459 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:22.461 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.500 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:22.503 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.516 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:22.524 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.564 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:22.567 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.574 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:22.577 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:22.598 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:30:22.598 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000002","TimeStamp":"2020-03-13T07:30:22.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:22.602 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.633 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:22.634 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000002","TimeStamp":"2020-03-13T07:30:22.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:22.634 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:30:22.634 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:30:22.635 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:30:22.635 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:30:22.636 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:22.674 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:22.687 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:30:22.691 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****Lugw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000002","TimeStamp":"2020-03-13T07:30:22.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:30:22.691 +08:00 [DBG] Token request success.
2020-03-13 15:30:22.692 +08:00 [INF] Request finished in 362.0783ms 200 application/json; charset=UTF-8
2020-03-13 15:30:23.424 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:30:23.424 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:30:23.425 +08:00 [INF] Request finished in 0.624ms 204 
2020-03-13 15:30:23.428 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:30:23.429 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:30:23.431 +08:00 [INF] Successfully validated the token.
2020-03-13 15:30:23.432 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:30:23.433 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:30:23.434 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:30:23.434 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:30:23.434 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:30:23.437 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:30:23.449 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:30:23.449 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:30:23.450 +08:00 [DBG] Start token request.
2020-03-13 15:30:23.450 +08:00 [DBG] Start client validation
2020-03-13 15:30:23.450 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:30:23.450 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:30:23.450 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:30:23.450 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:30:23.453 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.559 +08:00 [INF] Executed DbCommand (66ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:30:23.566 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:30:23.566 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:30:23.566 +08:00 [DBG] Client validation success
2020-03-13 15:30:23.566 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88U:00000004","TimeStamp":"2020-03-13T07:30:23.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:30:23.567 +08:00 [DBG] Start token request validation
2020-03-13 15:30:23.567 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:30:23.570 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.583 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:23.586 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.614 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:23.617 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.620 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:23.622 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.624 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:23.628 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.636 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:23.640 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:23.664 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:30:23.664 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000004","TimeStamp":"2020-03-13T07:30:23.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:23.668 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.703 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:23.704 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000004","TimeStamp":"2020-03-13T07:30:23.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:23.704 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:30:23.704 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:30:23.705 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:30:23.705 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:30:23.707 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:23.735 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:23.746 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:30:23.751 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****vFtg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000004","TimeStamp":"2020-03-13T07:30:23.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:30:23.751 +08:00 [DBG] Token request success.
2020-03-13 15:30:23.752 +08:00 [INF] Request finished in 323.5431ms 200 application/json; charset=UTF-8
2020-03-13 15:30:24.777 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:30:24.777 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:30:24.787 +08:00 [INF] Successfully validated the token.
2020-03-13 15:30:24.787 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:30:24.790 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:30:24.790 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:30:24.790 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:30:24.790 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:30:24.790 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:30:24.805 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:30:24.805 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:30:24.805 +08:00 [DBG] Start token request.
2020-03-13 15:30:24.805 +08:00 [DBG] Start client validation
2020-03-13 15:30:24.805 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:30:24.805 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:30:24.805 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:30:24.806 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:30:24.807 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:24.848 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:30:24.853 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:30:24.853 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:30:24.853 +08:00 [DBG] Client validation success
2020-03-13 15:30:24.853 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR88U:00000005","TimeStamp":"2020-03-13T07:30:24.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:30:24.853 +08:00 [DBG] Start token request validation
2020-03-13 15:30:24.853 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:30:24.855 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:24.864 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:24.867 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:24.901 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:24.905 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:24.907 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:30:24.910 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:24.915 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:30:24.919 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:24.926 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:24.930 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:30:24.957 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:30:24.957 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000005","TimeStamp":"2020-03-13T07:30:24.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:24.961 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:25.019 +08:00 [INF] Executed DbCommand (56ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:25.022 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000005","TimeStamp":"2020-03-13T07:30:25.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:30:25.022 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:30:25.022 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:30:25.022 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:30:25.022 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:30:25.025 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:30:25.076 +08:00 [INF] Executed DbCommand (50ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:30:25.093 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:30:25.103 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****ehrw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR88U:00000005","TimeStamp":"2020-03-13T07:30:25.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:30:25.103 +08:00 [DBG] Token request success.
2020-03-13 15:30:25.104 +08:00 [INF] Request finished in 326.9282ms 200 application/json; charset=UTF-8
2020-03-13 15:32:08.357 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:32:08.357 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:32:08.358 +08:00 [INF] Request finished in 0.5805ms 204 
2020-03-13 15:32:08.407 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:32:08.436 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:32:08.437 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:32:08.438 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:32:08.439 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:32:08.439 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:32:08.439 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:32:08.439 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:32:08.449 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:32:08.449 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:32:08.449 +08:00 [DBG] Start token request.
2020-03-13 15:32:08.449 +08:00 [DBG] Start client validation
2020-03-13 15:32:08.449 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:32:08.449 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:32:08.450 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:32:08.450 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:32:08.452 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.490 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:32:08.493 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:32:08.494 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:32:08.494 +08:00 [DBG] Client validation success
2020-03-13 15:32:08.494 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR894:00000002","TimeStamp":"2020-03-13T07:32:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:32:08.494 +08:00 [DBG] Start token request validation
2020-03-13 15:32:08.494 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:32:08.497 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.509 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:32:08.515 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.552 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:32:08.555 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.564 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:32:08.566 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.597 +08:00 [INF] Executed DbCommand (30ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:32:08.600 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.608 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:32:08.623 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:32:08.642 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:32:08.642 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR894:00000002","TimeStamp":"2020-03-13T07:32:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:32:08.646 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.668 +08:00 [INF] Executed DbCommand (21ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:32:08.669 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR894:00000002","TimeStamp":"2020-03-13T07:32:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:32:08.669 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:32:08.669 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:32:08.669 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:32:08.669 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:32:08.671 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:08.674 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:32:08.683 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:32:08.689 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****EgEg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR894:00000002","TimeStamp":"2020-03-13T07:32:08.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:32:08.689 +08:00 [DBG] Token request success.
2020-03-13 15:32:08.690 +08:00 [INF] Request finished in 285.0067ms 200 application/json; charset=UTF-8
2020-03-13 15:32:16.372 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:32:16.372 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:32:16.372 +08:00 [INF] Request finished in 0.5198ms 204 
2020-03-13 15:32:16.377 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:32:16.378 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:32:16.381 +08:00 [INF] Successfully validated the token.
2020-03-13 15:32:16.381 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:32:16.383 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:32:16.383 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:32:16.383 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:32:16.383 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:32:16.383 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:32:16.390 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:32:16.390 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:32:16.390 +08:00 [DBG] Start token request.
2020-03-13 15:32:16.391 +08:00 [DBG] Start client validation
2020-03-13 15:32:16.391 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:32:16.391 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:32:16.391 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:32:16.391 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:32:16.392 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.454 +08:00 [INF] Executed DbCommand (55ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:32:16.458 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:32:16.458 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:32:16.458 +08:00 [DBG] Client validation success
2020-03-13 15:32:16.458 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR895:00000002","TimeStamp":"2020-03-13T07:32:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:32:16.459 +08:00 [DBG] Start token request validation
2020-03-13 15:32:16.459 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:32:16.460 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.469 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:32:16.471 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.502 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:32:16.505 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.630 +08:00 [INF] Executed DbCommand (92ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:32:16.632 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.692 +08:00 [INF] Executed DbCommand (59ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:32:16.697 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.724 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:32:16.732 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:32:16.746 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:32:16.746 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR895:00000002","TimeStamp":"2020-03-13T07:32:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:32:16.756 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.783 +08:00 [INF] Executed DbCommand (19ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:32:16.786 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR895:00000002","TimeStamp":"2020-03-13T07:32:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:32:16.786 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:32:16.787 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:32:16.787 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:32:16.787 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:32:16.788 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:16.820 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:32:16.831 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:32:16.834 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****ko5Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR895:00000002","TimeStamp":"2020-03-13T07:32:16.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:32:16.834 +08:00 [DBG] Token request success.
2020-03-13 15:32:16.835 +08:00 [INF] Request finished in 457.3598ms 200 application/json; charset=UTF-8
2020-03-13 15:32:58.178 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:32:58.286 +08:00 [INF] Successfully validated the token.
2020-03-13 15:32:58.286 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:32:58.289 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:32:58.360 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:32:58.362 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:32:58.364 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:32:58.365 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:32:58.368 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:32:58.371 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:32:58.373 +08:00 [INF] Successfully validated the token.
2020-03-13 15:32:58.373 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:32:58.374 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:32:58.375 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:32:58.864 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:32:58.865 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:32:58.882 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:32:58.902 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:58.923 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:32:58.929 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:32:58.930 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:32:58.952 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:58.956 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:32:59.000 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 631.9798ms
2020-03-13 15:32:59.000 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:32:59.030 +08:00 [INF] Executed DbCommand (128ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:32:59.042 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 176.7398ms.
2020-03-13 15:32:59.071 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:32:59.086 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 15:32:59.090 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 724.6422ms
2020-03-13 15:32:59.091 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:32:59.092 +08:00 [INF] Request finished in 913.646ms 200 application/json; charset=utf-8
2020-03-13 15:32:59.094 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:32:59.094 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 229.6338ms.
2020-03-13 15:32:59.095 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:32:59.095 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 15:32:59.096 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 720.5263ms
2020-03-13 15:32:59.096 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:32:59.097 +08:00 [INF] Request finished in 725.207ms 200 application/json; charset=utf-8
2020-03-13 15:32:59.457 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:32:59.803 +08:00 [INF] Executed DbCommand (77ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:32:59.896 +08:00 [INF] Executed DbCommand (84ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:32:59.902 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:32:59.953 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:32:59.953 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:32:59.957 +08:00 [INF] Request finished in 1597.8093ms 401 application/json; charset=utf-8
2020-03-13 15:33:32.481 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:33:32.482 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:33:32.486 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:32.488 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:33:32.576 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:33:32.586 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:33:32.586 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:33:32.586 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:33:32.588 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:33:32.590 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 101.9458ms
2020-03-13 15:33:32.591 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:32.607 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:32.659 +08:00 [INF] Executed DbCommand (21ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:33:32.672 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:32.676 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:32.680 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:32.680 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:32.682 +08:00 [INF] Request finished in 200.1518ms 401 application/json; charset=utf-8
2020-03-13 15:33:41.643 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:33:41.644 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:33:41.646 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:41.647 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:33:41.697 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:33:41.701 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:33:41.701 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:33:41.701 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:33:41.701 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:33:41.702 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 54.4107ms
2020-03-13 15:33:41.702 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:41.722 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:41.744 +08:00 [INF] Executed DbCommand (19ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:33:41.756 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:41.757 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:41.759 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:41.759 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:41.760 +08:00 [INF] Request finished in 116.9336ms 401 application/json; charset=utf-8
2020-03-13 15:33:45.160 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:33:45.161 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:33:45.165 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:45.167 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:33:45.272 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:33:45.282 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:33:45.282 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:33:45.282 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:33:45.282 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:33:45.283 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 115.387ms
2020-03-13 15:33:45.283 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:45.321 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:45.391 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:33:45.398 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:45.400 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:45.405 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:45.405 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:45.405 +08:00 [INF] Request finished in 245.4394ms 401 application/json; charset=utf-8
2020-03-13 15:33:46.289 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:33:46.290 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:33:46.294 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:46.299 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:33:46.403 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:33:46.413 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:33:46.413 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:33:46.413 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:33:46.414 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:33:46.414 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 114.7981ms
2020-03-13 15:33:46.414 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:46.432 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:46.487 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:33:46.505 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:46.518 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:46.521 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:46.521 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:46.521 +08:00 [INF] Request finished in 232.0322ms 401 application/json; charset=utf-8
2020-03-13 15:33:47.907 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:33:47.908 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:33:47.913 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:47.915 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:33:48.004 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:33:48.012 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:33:48.012 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! User has not logged in.",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:33:48.012 +08:00 [WRN] Authorization failed! User has not logged in.
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! User has not logged in.
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:33:48.013 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:33:48.014 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 98.5536ms
2020-03-13 15:33:48.014 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:48.023 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:48.035 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:33:48.041 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:48.042 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:48.056 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:48.056 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:48.057 +08:00 [INF] Request finished in 149.7418ms 401 application/json; charset=utf-8
2020-03-13 15:33:53.564 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:33:53.564 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:33:53.565 +08:00 [INF] Request finished in 0.6937ms 204 
2020-03-13 15:33:53.568 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:33:53.568 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:33:53.568 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:33:53.574 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:33:53.575 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:33:53.575 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:33:53.575 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:33:53.575 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:33:53.587 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:33:53.587 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:33:53.587 +08:00 [DBG] Start token request.
2020-03-13 15:33:53.587 +08:00 [DBG] Start client validation
2020-03-13 15:33:53.587 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:33:53.587 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:33:53.588 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:33:53.588 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:33:53.591 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.659 +08:00 [INF] Executed DbCommand (65ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:33:53.668 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:33:53.669 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:33:53.669 +08:00 [DBG] Client validation success
2020-03-13 15:33:53.669 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR89E:00000002","TimeStamp":"2020-03-13T07:33:53.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:33:53.669 +08:00 [DBG] Start token request validation
2020-03-13 15:33:53.669 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:33:53.671 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.680 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:33:53.682 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.713 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:33:53.717 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.720 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:33:53.722 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.725 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:33:53.729 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.736 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:33:53.739 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:33:53.765 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:33:53.765 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89E:00000002","TimeStamp":"2020-03-13T07:33:53.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:33:53.768 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.805 +08:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:33:53.806 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89E:00000002","TimeStamp":"2020-03-13T07:33:53.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:33:53.807 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:33:53.807 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:33:53.807 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:33:53.807 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:33:53.810 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:53.816 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:33:53.830 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:33:53.839 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****ny6g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR89E:00000002","TimeStamp":"2020-03-13T07:33:53.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:33:53.839 +08:00 [DBG] Token request success.
2020-03-13 15:33:53.840 +08:00 [INF] Request finished in 272.1842ms 200 application/json; charset=UTF-8
2020-03-13 15:33:53.898 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:33:53.900 +08:00 [INF] Successfully validated the token.
2020-03-13 15:33:53.900 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:33:53.905 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:53.907 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:33:54.034 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:33:54.037 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:54.042 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:33:54.055 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 20.0007ms.
2020-03-13 15:33:54.056 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:54.057 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 15:33:54.058 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 150.9181ms
2020-03-13 15:33:54.058 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:54.059 +08:00 [INF] Request finished in 160.9394ms 200 application/json; charset=utf-8
2020-03-13 15:33:56.492 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 15:33:56.493 +08:00 [INF] Successfully validated the token.
2020-03-13 15:33:56.494 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:33:56.499 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:56.565 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:33:56.970 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:33:57.437 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:33:57.437 +08:00 [DBG] Not found in the cache, getting from the repository: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:33:57.465 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'PermissionManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:57.635 +08:00 [INF] Executed DbCommand (152ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 15:33:57.659 +08:00 [DBG] Setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:33:57.663 +08:00 [DBG] Finished setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:33:57.674 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:33:57.674 +08:00 [DBG] Not found in the cache, getting from the repository: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:33:57.681 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 15:33:57.682 +08:00 [DBG] Setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:33:57.682 +08:00 [DBG] Finished setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:33:57.686 +08:00 [INF] Authorization failed.
2020-03-13 15:33:57.701 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:33:57.701 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:33:57.701 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:33:57.701 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:33:57.702 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 1136.0434ms
2020-03-13 15:33:57.702 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:33:57.708 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:33:57.715 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:33:57.721 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:57.723 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:33:57.724 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:57.724 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:33:57.724 +08:00 [INF] Request finished in 1232.9051ms 403 application/json; charset=utf-8
2020-03-13 15:38:33.179 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:38:33.179 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:38:33.180 +08:00 [INF] Request finished in 1.194ms 204 
2020-03-13 15:38:33.242 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:38:33.242 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:38:33.242 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:38:33.244 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:38:33.245 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:38:33.245 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:38:33.245 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:38:33.245 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:38:33.252 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:38:33.252 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:38:33.252 +08:00 [DBG] Start token request.
2020-03-13 15:38:33.252 +08:00 [DBG] Start client validation
2020-03-13 15:38:33.252 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:38:33.252 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:38:33.253 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:38:33.253 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:38:33.256 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.296 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:38:33.315 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:38:33.315 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:38:33.315 +08:00 [DBG] Client validation success
2020-03-13 15:38:33.315 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR89H:00000002","TimeStamp":"2020-03-13T07:38:33.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:38:33.315 +08:00 [DBG] Start token request validation
2020-03-13 15:38:33.315 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:38:33.317 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.327 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:38:33.329 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.359 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:38:33.363 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.369 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:38:33.371 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.398 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:38:33.402 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.414 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:38:33.416 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:38:33.435 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:38:33.435 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89H:00000002","TimeStamp":"2020-03-13T07:38:33.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:38:33.437 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.459 +08:00 [INF] Executed DbCommand (19ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:38:33.460 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89H:00000002","TimeStamp":"2020-03-13T07:38:33.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:38:33.460 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:38:33.460 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:38:33.460 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:38:33.460 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:38:33.462 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.464 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:38:33.471 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:38:33.477 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****KSlA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR89H:00000002","TimeStamp":"2020-03-13T07:38:33.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:38:33.477 +08:00 [DBG] Token request success.
2020-03-13 15:38:33.477 +08:00 [INF] Request finished in 235.5822ms 200 application/json; charset=UTF-8
2020-03-13 15:38:33.593 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:38:33.595 +08:00 [INF] Successfully validated the token.
2020-03-13 15:38:33.595 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:38:33.598 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:38:33.600 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:38:33.710 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:38:33.712 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:33.738 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:38:33.739 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 28.9234ms.
2020-03-13 15:38:33.740 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:38:33.740 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 15:38:33.741 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 141.4873ms
2020-03-13 15:38:33.742 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:38:33.742 +08:00 [INF] Request finished in 148.688ms 200 application/json; charset=utf-8
2020-03-13 15:38:35.432 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 15:38:35.433 +08:00 [INF] Successfully validated the token.
2020-03-13 15:38:35.434 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:38:35.441 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:38:35.443 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:38:35.670 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:38:35.673 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:38:35.675 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:38:35.677 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:38:35.677 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:38:35.677 +08:00 [INF] Authorization failed.
2020-03-13 15:38:35.704 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:38:35.705 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:38:35.705 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:38:35.705 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:38:35.706 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 263.3243ms
2020-03-13 15:38:35.706 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:38:35.715 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:38:35.747 +08:00 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:38:35.751 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:38:35.752 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:38:35.799 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:38:35.799 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:38:35.799 +08:00 [INF] Request finished in 367.3206ms 403 application/json; charset=utf-8
2020-03-13 15:40:11.497 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:40:11.498 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:40:11.498 +08:00 [INF] Request finished in 0.7923ms 204 
2020-03-13 15:40:11.515 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:40:11.515 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:40:11.515 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:40:11.517 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:40:11.518 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:40:11.518 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:40:11.518 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:40:11.518 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:40:11.531 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:40:11.532 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:40:11.532 +08:00 [DBG] Start token request.
2020-03-13 15:40:11.532 +08:00 [DBG] Start client validation
2020-03-13 15:40:11.532 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:40:11.532 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:40:11.533 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:40:11.533 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:40:11.536 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:11.697 +08:00 [INF] Executed DbCommand (80ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:40:11.700 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:40:11.700 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:40:11.700 +08:00 [DBG] Client validation success
2020-03-13 15:40:11.701 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR89K:00000002","TimeStamp":"2020-03-13T07:40:11.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:40:11.701 +08:00 [DBG] Start token request validation
2020-03-13 15:40:11.701 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:40:11.703 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:11.833 +08:00 [INF] Executed DbCommand (130ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:40:11.878 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:11.912 +08:00 [INF] Executed DbCommand (33ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:40:11.916 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:11.924 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:40:11.926 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:11.929 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:40:11.951 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:11.962 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:40:11.966 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:40:12.003 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:40:12.003 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89K:00000002","TimeStamp":"2020-03-13T07:40:12.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:40:12.009 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:12.065 +08:00 [INF] Executed DbCommand (53ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:40:12.077 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89K:00000002","TimeStamp":"2020-03-13T07:40:12.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:40:12.077 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:40:12.078 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:40:12.078 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:40:12.078 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:40:12.081 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:12.134 +08:00 [INF] Executed DbCommand (53ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:40:12.149 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:40:12.155 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****i1pw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR89K:00000002","TimeStamp":"2020-03-13T07:40:12.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:40:12.155 +08:00 [DBG] Token request success.
2020-03-13 15:40:12.155 +08:00 [INF] Request finished in 640.405ms 200 application/json; charset=UTF-8
2020-03-13 15:40:12.222 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:40:12.224 +08:00 [INF] Successfully validated the token.
2020-03-13 15:40:12.224 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:40:12.229 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:40:12.230 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:40:12.327 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:40:12.329 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:12.366 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:40:12.367 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 39.7358ms.
2020-03-13 15:40:12.367 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:40:12.368 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 15:40:12.368 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 137.6197ms
2020-03-13 15:40:12.368 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:40:12.369 +08:00 [INF] Request finished in 146.6295ms 200 application/json; charset=utf-8
2020-03-13 15:40:13.715 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 15:40:13.716 +08:00 [INF] Successfully validated the token.
2020-03-13 15:40:13.716 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:40:13.720 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:40:13.722 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:40:13.930 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:40:13.937 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:40:13.937 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:40:13.938 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:40:13.938 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:40:13.938 +08:00 [INF] Authorization failed.
2020-03-13 15:40:14.011 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:40:14.011 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:40:14.011 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:40:14.012 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:40:14.012 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 290.1802ms
2020-03-13 15:40:14.012 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:40:14.027 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:14.062 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:40:14.177 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:40:14.181 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:40:14.183 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:40:14.183 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:40:14.183 +08:00 [INF] Request finished in 468.7974ms 403 application/json; charset=utf-8
2020-03-13 15:40:58.445 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-13 15:40:58.447 +08:00 [INF] Successfully validated the token.
2020-03-13 15:40:58.447 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:40:58.452 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:40:58.464 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-13 15:40:58.794 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-13 15:40:58.802 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.802 +08:00 [DBG] Not found in the cache, getting from the repository: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.804 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'PermissionManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:58.819 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 15:40:58.819 +08:00 [DBG] Setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.819 +08:00 [DBG] Finished setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.820 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.820 +08:00 [DBG] Not found in the cache, getting from the repository: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.828 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 15:40:58.828 +08:00 [DBG] Setting the cache item: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.828 +08:00 [DBG] Finished setting the cache item: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:40:58.829 +08:00 [INF] Authorization failed.
2020-03-13 15:40:58.839 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:40:58.839 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:40:58.839 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:40:58.839 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:40:58.840 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 375.3809ms
2020-03-13 15:40:58.840 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:40:58.882 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:40:58.910 +08:00 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:40:58.915 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:40:58.916 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:40:58.919 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:40:58.919 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:40:58.920 +08:00 [INF] Request finished in 474.9946ms 403 application/json; charset=utf-8
2020-03-13 15:41:00.235 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:41:00.237 +08:00 [INF] Successfully validated the token.
2020-03-13 15:41:00.237 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:41:00.240 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:41:00.255 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:41:00.497 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:41:00.501 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:41:00.501 +08:00 [DBG] Not found in the cache, getting from the repository: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:41:00.502 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'PermissionManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:41:00.513 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 15:41:00.513 +08:00 [DBG] Setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:41:00.513 +08:00 [DBG] Finished setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:41:00.514 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:41:00.514 +08:00 [DBG] Not found in the cache, getting from the repository: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:41:00.523 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 15:41:00.524 +08:00 [DBG] Setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:41:00.524 +08:00 [DBG] Finished setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:41:00.524 +08:00 [INF] Authorization failed.
2020-03-13 15:41:00.560 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:41:00.560 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:41:00.560 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:41:00.561 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:41:00.561 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 305.6321ms
2020-03-13 15:41:00.561 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:41:00.614 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:41:00.634 +08:00 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:41:00.649 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:00.650 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:00.653 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:00.653 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:00.653 +08:00 [INF] Request finished in 418.099ms 403 application/json; charset=utf-8
2020-03-13 15:41:03.851 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 15:41:03.853 +08:00 [INF] Successfully validated the token.
2020-03-13 15:41:03.853 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:41:03.857 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:41:03.859 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:41:03.959 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:41:03.960 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:41:03.961 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:41:03.961 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:41:03.961 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:41:03.961 +08:00 [INF] Authorization failed.
2020-03-13 15:41:03.968 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:41:03.968 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:41:03.968 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:41:03.968 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:41:03.969 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 109.7184ms
2020-03-13 15:41:03.969 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:41:03.976 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:41:03.999 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:41:04.006 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:04.009 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:04.011 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:04.011 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:04.011 +08:00 [INF] Request finished in 159.8934ms 403 application/json; charset=utf-8
2020-03-13 15:41:06.756 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:41:06.758 +08:00 [INF] Successfully validated the token.
2020-03-13 15:41:06.758 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:41:06.762 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:41:06.763 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:41:06.907 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:41:06.910 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:41:06.910 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:41:06.913 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:41:06.913 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:41:06.913 +08:00 [INF] Authorization failed.
2020-03-13 15:41:06.961 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:41:06.962 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:41:06.962 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:41:06.962 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:41:06.962 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 199.1323ms
2020-03-13 15:41:06.962 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:41:06.969 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:41:07.010 +08:00 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:41:07.017 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:07.020 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:07.027 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:07.027 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:07.027 +08:00 [INF] Request finished in 271.5196ms 403 application/json; charset=utf-8
2020-03-13 15:41:07.571 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-13 15:41:07.572 +08:00 [INF] Successfully validated the token.
2020-03-13 15:41:07.573 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:41:07.579 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:41:07.581 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-13 15:41:07.678 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-13 15:41:07.681 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:41:07.682 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:41:07.682 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:41:07.682 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:41:07.682 +08:00 [INF] Authorization failed.
2020-03-13 15:41:07.700 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:41:07.700 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:41:07.701 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:41:07.701 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:41:07.702 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 121.0022ms
2020-03-13 15:41:07.702 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:41:07.725 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:41:07.871 +08:00 [INF] Executed DbCommand (103ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:41:07.883 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:07.885 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:41:07.888 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:07.888 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:41:07.888 +08:00 [INF] Request finished in 316.7861ms 403 application/json; charset=utf-8
2020-03-13 15:42:09.167 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:42:09.167 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:42:09.168 +08:00 [INF] Request finished in 1.8382ms 204 
2020-03-13 15:42:09.217 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:42:09.220 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:42:09.236 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:42:09.240 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:42:09.240 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:42:09.240 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:42:09.240 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:42:09.247 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:42:09.271 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:42:09.271 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:42:09.271 +08:00 [DBG] Start token request.
2020-03-13 15:42:09.271 +08:00 [DBG] Start client validation
2020-03-13 15:42:09.271 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:42:09.271 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:42:09.271 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:42:09.271 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:42:09.273 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.316 +08:00 [INF] Executed DbCommand (39ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:42:09.321 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:42:09.321 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:42:09.321 +08:00 [DBG] Client validation success
2020-03-13 15:42:09.321 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR89S:00000002","TimeStamp":"2020-03-13T07:42:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:42:09.321 +08:00 [DBG] Start token request validation
2020-03-13 15:42:09.322 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:42:09.323 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.338 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:42:09.340 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.383 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:42:09.386 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.400 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:42:09.402 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.432 +08:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:42:09.435 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.440 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:42:09.455 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:42:09.473 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:42:09.473 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89S:00000002","TimeStamp":"2020-03-13T07:42:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:42:09.477 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.510 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:42:09.512 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR89S:00000002","TimeStamp":"2020-03-13T07:42:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:42:09.512 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:42:09.513 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:42:09.513 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:42:09.513 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:42:09.515 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.565 +08:00 [INF] Executed DbCommand (48ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:42:09.612 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:42:09.618 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****4xPQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR89S:00000002","TimeStamp":"2020-03-13T07:42:09.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:42:09.618 +08:00 [DBG] Token request success.
2020-03-13 15:42:09.619 +08:00 [INF] Request finished in 401.4106ms 200 application/json; charset=UTF-8
2020-03-13 15:42:09.705 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:42:09.707 +08:00 [INF] Successfully validated the token.
2020-03-13 15:42:09.707 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:42:09.712 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:42:09.713 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:42:09.819 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:42:09.822 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:09.860 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:42:09.860 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 41.3731ms.
2020-03-13 15:42:09.861 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:42:09.862 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 15:42:09.863 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 150.0645ms
2020-03-13 15:42:09.863 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:42:09.864 +08:00 [INF] Request finished in 158.4809ms 200 application/json; charset=utf-8
2020-03-13 15:42:10.453 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-13 15:42:10.455 +08:00 [INF] Successfully validated the token.
2020-03-13 15:42:10.455 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:42:10.458 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:42:10.459 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-13 15:42:10.585 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-13 15:42:10.586 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:42:10.586 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:42:10.586 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:42:10.586 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:42:10.586 +08:00 [INF] Authorization failed.
2020-03-13 15:42:10.589 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:42:10.589 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:42:10.590 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:42:10.590 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:42:10.590 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 130.6569ms
2020-03-13 15:42:10.590 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:42:10.596 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:10.886 +08:00 [INF] Executed DbCommand (249ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:42:10.898 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:42:10.907 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:42:10.919 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:42:10.919 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:42:10.919 +08:00 [INF] Request finished in 465.6368ms 403 application/json; charset=utf-8
2020-03-13 15:42:29.461 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 15:42:29.464 +08:00 [INF] Successfully validated the token.
2020-03-13 15:42:29.464 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:42:29.466 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:42:29.468 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:42:29.610 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:42:29.630 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:42:29.630 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:42:29.630 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:42:29.630 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:42:29.630 +08:00 [INF] Authorization failed.
2020-03-13 15:42:29.685 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:42:29.685 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:42:29.685 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:42:29.686 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:42:29.686 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 218.2614ms
2020-03-13 15:42:29.686 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:42:29.692 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:42:29.715 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:42:29.718 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:42:29.719 +08:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:42:29.720 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:42:29.720 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:42:29.720 +08:00 [INF] Request finished in 259.6005ms 403 application/json; charset=utf-8
2020-03-13 15:42:39.307 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/app/auditLog?page=1&limit=10  
2020-03-13 15:42:39.309 +08:00 [INF] Successfully validated the token.
2020-03-13 15:42:39.309 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:42:39.314 +08:00 [INF] Request finished in 6.9047ms 404 
2020-03-13 15:56:02.734 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 15:56:02.735 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:56:02.758 +08:00 [INF] Request finished in 23.7782ms 204 
2020-03-13 15:56:02.786 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 15:56:02.787 +08:00 [INF] CORS policy execution successful.
2020-03-13 15:56:02.789 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 15:56:02.792 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 15:56:02.792 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 15:56:02.792 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 15:56:02.792 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 15:56:02.793 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 15:56:02.811 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 15:56:02.811 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 15:56:02.811 +08:00 [DBG] Start token request.
2020-03-13 15:56:02.811 +08:00 [DBG] Start client validation
2020-03-13 15:56:02.811 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 15:56:02.811 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 15:56:02.812 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 15:56:02.812 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 15:56:02.818 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:02.970 +08:00 [INF] Executed DbCommand (112ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 15:56:02.987 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 15:56:02.987 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 15:56:02.987 +08:00 [DBG] Client validation success
2020-03-13 15:56:02.987 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR8A1:00000002","TimeStamp":"2020-03-13T07:56:02.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 15:56:02.987 +08:00 [DBG] Start token request validation
2020-03-13 15:56:02.987 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 15:56:02.989 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:02.996 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:56:02.999 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:03.026 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:56:03.029 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:03.032 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 15:56:03.036 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:03.039 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 15:56:03.058 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:03.074 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:56:03.096 +08:00 [INF] Executed DbCommand (21ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 15:56:03.131 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 15:56:03.131 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8A1:00000002","TimeStamp":"2020-03-13T07:56:03.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:56:03.135 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:03.179 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:56:03.182 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8A1:00000002","TimeStamp":"2020-03-13T07:56:03.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 15:56:03.182 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 15:56:03.183 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 15:56:03.183 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 15:56:03.183 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 15:56:03.186 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:03.189 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:56:03.202 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 15:56:03.208 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****fWyg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR8A1:00000002","TimeStamp":"2020-03-13T07:56:03.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 15:56:03.208 +08:00 [DBG] Token request success.
2020-03-13 15:56:03.208 +08:00 [INF] Request finished in 422.0579ms 200 application/json; charset=UTF-8
2020-03-13 15:56:03.286 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 15:56:03.288 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:03.288 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:03.291 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:03.292 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:03.361 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:03.364 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:03.369 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 15:56:03.371 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 9.8478ms.
2020-03-13 15:56:03.373 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:03.374 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 15:56:03.375 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 82.3483ms
2020-03-13 15:56:03.375 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:03.375 +08:00 [INF] Request finished in 88.9358ms 200 application/json; charset=utf-8
2020-03-13 15:56:34.106 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-13 15:56:34.107 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:34.107 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:34.112 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:56:34.114 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-13 15:56:34.236 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:34.238 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:56:34.239 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:56:34.239 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:56:34.239 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:56:34.239 +08:00 [INF] Authorization failed.
2020-03-13 15:56:34.245 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:34.245 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:34.245 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:34.246 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:34.246 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 132.2689ms
2020-03-13 15:56:34.246 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:56:34.262 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:34.321 +08:00 [INF] Executed DbCommand (53ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:34.340 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:34.355 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:34.365 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:34.365 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:34.367 +08:00 [INF] Request finished in 260.3499ms 403 application/json; charset=utf-8
2020-03-13 15:56:34.558 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:56:34.592 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:34.592 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:34.598 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:34.602 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:34.680 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:34.681 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:34.681 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:34.682 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:34.682 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:34.682 +08:00 [INF] Authorization failed.
2020-03-13 15:56:34.691 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:34.691 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:34.691 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:34.692 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:34.692 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 90.2483ms
2020-03-13 15:56:34.692 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:34.702 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:34.733 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:34.738 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:34.739 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:34.742 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:34.742 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:34.742 +08:00 [INF] Request finished in 184.7954ms 403 application/json; charset=utf-8
2020-03-13 15:56:36.058 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 15:56:36.059 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:36.059 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:36.063 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:36.066 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:36.155 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:36.158 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:56:36.158 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:56:36.159 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:56:36.159 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:56:36.159 +08:00 [INF] Authorization failed.
2020-03-13 15:56:36.179 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:36.180 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:36.180 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:36.180 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:36.180 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 114.1347ms
2020-03-13 15:56:36.180 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:36.200 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:36.213 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:36.216 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:36.244 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:36.248 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:36.248 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:36.249 +08:00 [INF] Request finished in 191.0972ms 403 application/json; charset=utf-8
2020-03-13 15:56:36.352 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:56:36.355 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:36.355 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:36.359 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:36.360 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:36.451 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:36.452 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:36.452 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:36.452 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:36.452 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:36.453 +08:00 [INF] Authorization failed.
2020-03-13 15:56:36.457 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:36.458 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:36.458 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:36.458 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:36.458 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 98.1158ms
2020-03-13 15:56:36.458 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:36.470 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:36.515 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:36.522 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:36.529 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:36.548 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:36.548 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:36.549 +08:00 [INF] Request finished in 198.5551ms 403 application/json; charset=utf-8
2020-03-13 15:56:36.879 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-13 15:56:36.880 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:36.880 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:36.885 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:56:36.887 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-13 15:56:37.025 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:37.026 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:56:37.026 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:56:37.026 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:56:37.026 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:56:37.026 +08:00 [INF] Authorization failed.
2020-03-13 15:56:37.034 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:37.034 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:37.034 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:37.035 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:37.035 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 148.1283ms
2020-03-13 15:56:37.035 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:56:37.042 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:37.063 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:37.067 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:37.075 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:37.078 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:37.078 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:37.078 +08:00 [INF] Request finished in 199.6774ms 403 application/json; charset=utf-8
2020-03-13 15:56:37.821 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 15:56:37.823 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:37.823 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:37.827 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:37.828 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:37.945 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:37.982 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:56:37.982 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 15:56:37.982 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:56:37.982 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 15:56:37.982 +08:00 [INF] Authorization failed.
2020-03-13 15:56:37.997 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:37.997 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:37.997 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:38.002 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:38.003 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 174.7601ms
2020-03-13 15:56:38.003 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:38.011 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:38.074 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:38.079 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:38.080 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:38.084 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:38.084 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:38.087 +08:00 [INF] Request finished in 266.3632ms 403 application/json; charset=utf-8
2020-03-13 15:56:38.568 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:56:38.570 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:38.570 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:38.573 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:38.576 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:38.709 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:38.711 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:38.711 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:38.711 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:38.711 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:38.711 +08:00 [INF] Authorization failed.
2020-03-13 15:56:38.719 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:38.719 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:38.719 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:38.719 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:38.720 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 143.9776ms
2020-03-13 15:56:38.720 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:38.735 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:38.745 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:38.747 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:38.750 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:38.761 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:38.761 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:38.762 +08:00 [INF] Request finished in 193.4958ms 403 application/json; charset=utf-8
2020-03-13 15:56:39.569 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:56:39.570 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:39.570 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:39.575 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:39.584 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:39.709 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:39.712 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:39.712 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:39.712 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:39.712 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:39.712 +08:00 [INF] Authorization failed.
2020-03-13 15:56:39.724 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:39.724 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:39.724 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:39.725 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:39.725 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 141.173ms
2020-03-13 15:56:39.726 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:39.741 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:39.748 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:39.757 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:39.759 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:39.775 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:39.775 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:39.776 +08:00 [INF] Request finished in 207.0265ms 403 application/json; charset=utf-8
2020-03-13 15:56:40.168 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:56:40.170 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:40.170 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:40.173 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:40.175 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:40.302 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:40.304 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:40.304 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:40.304 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:40.304 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:40.304 +08:00 [INF] Authorization failed.
2020-03-13 15:56:40.313 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:40.313 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:40.313 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:40.313 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:40.314 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 139.2115ms
2020-03-13 15:56:40.314 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:40.323 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:40.335 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:40.336 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:40.339 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:40.341 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:40.341 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:40.341 +08:00 [INF] Request finished in 172.8608ms 403 application/json; charset=utf-8
2020-03-13 15:56:41.439 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-13 15:56:41.440 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:41.440 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:41.444 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:56:41.445 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-13 15:56:41.555 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:41.556 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:56:41.557 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-13 15:56:41.557 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:56:41.557 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-13 15:56:41.557 +08:00 [INF] Authorization failed.
2020-03-13 15:56:41.569 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:41.569 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:41.569 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:41.570 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:41.571 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 125.2959ms
2020-03-13 15:56:41.571 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-13 15:56:41.581 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:41.630 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:41.635 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:41.644 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:41.648 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:41.648 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:41.649 +08:00 [INF] Request finished in 210.7542ms 403 application/json; charset=utf-8
2020-03-13 15:56:41.836 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-13 15:56:41.838 +08:00 [INF] Successfully validated the token.
2020-03-13 15:56:41.838 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 15:56:41.845 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:41.846 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-13 15:56:41.984 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 15:56:41.985 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:41.986 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-13 15:56:41.986 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:41.986 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-13 15:56:41.986 +08:00 [INF] Authorization failed.
2020-03-13 15:56:41.993 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 15:56:41.993 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-13 15:56:41.993 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 15:56:41.993 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 15:56:41.993 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 147.0754ms
2020-03-13 15:56:41.993 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 15:56:42.007 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 15:56:42.021 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 15:56:42.023 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:42.025 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 15:56:42.032 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:42.032 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 15:56:42.033 +08:00 [INF] Request finished in 196.9614ms 403 application/json; charset=utf-8
2020-03-13 16:09:57.030 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 16:09:57.030 +08:00 [INF] CORS policy execution successful.
2020-03-13 16:09:57.030 +08:00 [INF] Request finished in 0.5838ms 204 
2020-03-13 16:09:57.058 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 16:09:57.059 +08:00 [INF] CORS policy execution successful.
2020-03-13 16:09:57.059 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 16:09:57.061 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 16:09:57.061 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 16:09:57.061 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 16:09:57.061 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 16:09:57.062 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 16:09:57.079 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 16:09:57.079 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 16:09:57.079 +08:00 [DBG] Start token request.
2020-03-13 16:09:57.079 +08:00 [DBG] Start client validation
2020-03-13 16:09:57.079 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 16:09:57.079 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 16:09:57.079 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 16:09:57.079 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 16:09:57.081 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.140 +08:00 [INF] Executed DbCommand (49ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 16:09:57.144 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 16:09:57.144 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 16:09:57.144 +08:00 [DBG] Client validation success
2020-03-13 16:09:57.144 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR8AE:00000002","TimeStamp":"2020-03-13T08:09:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 16:09:57.144 +08:00 [DBG] Start token request validation
2020-03-13 16:09:57.144 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 16:09:57.146 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.155 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 16:09:57.157 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.194 +08:00 [INF] Executed DbCommand (36ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 16:09:57.198 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.202 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 16:09:57.225 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.229 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 16:09:57.234 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.243 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 16:09:57.247 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 16:09:57.279 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 16:09:57.280 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8AE:00000002","TimeStamp":"2020-03-13T08:09:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 16:09:57.283 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.330 +08:00 [INF] Executed DbCommand (44ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:09:57.336 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8AE:00000002","TimeStamp":"2020-03-13T08:09:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 16:09:57.336 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 16:09:57.336 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 16:09:57.336 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 16:09:57.336 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 16:09:57.339 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.345 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:09:57.363 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 16:09:57.372 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****mNVA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR8AE:00000002","TimeStamp":"2020-03-13T08:09:57.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 16:09:57.372 +08:00 [DBG] Token request success.
2020-03-13 16:09:57.373 +08:00 [INF] Request finished in 314.3635ms 200 application/json; charset=UTF-8
2020-03-13 16:09:57.452 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 16:09:57.453 +08:00 [INF] Successfully validated the token.
2020-03-13 16:09:57.453 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 16:09:57.456 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:09:57.457 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 16:09:57.540 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 16:09:57.543 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:09:57.546 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:09:57.557 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 16.6871ms.
2020-03-13 16:09:57.557 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 16:09:57.558 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 16:09:57.558 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 101.707ms
2020-03-13 16:09:57.559 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:09:57.559 +08:00 [INF] Request finished in 107.2089ms 200 application/json; charset=utf-8
2020-03-13 16:24:49.009 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 16:24:49.009 +08:00 [INF] CORS policy execution successful.
2020-03-13 16:24:49.009 +08:00 [INF] Request finished in 0.6736ms 204 
2020-03-13 16:24:49.044 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 16:24:49.045 +08:00 [INF] CORS policy execution successful.
2020-03-13 16:24:49.045 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 16:24:49.048 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 16:24:49.049 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 16:24:49.049 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 16:24:49.049 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 16:24:49.049 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 16:24:49.095 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 16:24:49.095 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 16:24:49.096 +08:00 [DBG] Start token request.
2020-03-13 16:24:49.096 +08:00 [DBG] Start client validation
2020-03-13 16:24:49.096 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 16:24:49.096 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 16:24:49.096 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 16:24:49.096 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 16:24:49.099 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.151 +08:00 [INF] Executed DbCommand (42ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 16:24:49.158 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 16:24:49.158 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 16:24:49.158 +08:00 [DBG] Client validation success
2020-03-13 16:24:49.158 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR8AG:00000002","TimeStamp":"2020-03-13T08:24:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 16:24:49.160 +08:00 [DBG] Start token request validation
2020-03-13 16:24:49.160 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 16:24:49.162 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.173 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 16:24:49.176 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.227 +08:00 [INF] Executed DbCommand (49ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 16:24:49.232 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.237 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 16:24:49.240 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.263 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 16:24:49.269 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.279 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 16:24:49.282 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 16:24:49.315 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 16:24:49.315 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8AG:00000002","TimeStamp":"2020-03-13T08:24:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 16:24:49.319 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.357 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:24:49.359 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8AG:00000002","TimeStamp":"2020-03-13T08:24:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 16:24:49.359 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 16:24:49.360 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 16:24:49.360 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 16:24:49.360 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 16:24:49.362 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.368 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:24:49.383 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 16:24:49.391 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****99gg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR8AG:00000002","TimeStamp":"2020-03-13T08:24:49.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 16:24:49.391 +08:00 [DBG] Token request success.
2020-03-13 16:24:49.392 +08:00 [INF] Request finished in 347.5683ms 200 application/json; charset=UTF-8
2020-03-13 16:24:49.437 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 16:24:49.439 +08:00 [INF] Successfully validated the token.
2020-03-13 16:24:49.439 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 16:24:49.442 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:24:49.443 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 16:24:49.530 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 16:24:49.532 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:24:49.539 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:24:49.545 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 15.0805ms.
2020-03-13 16:24:49.547 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 16:24:49.547 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 16:24:49.548 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 104.5768ms
2020-03-13 16:24:49.548 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:24:49.548 +08:00 [INF] Request finished in 110.8358ms 200 application/json; charset=utf-8
2020-03-13 16:26:23.482 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:26:23.537 +08:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_1='?' (DbType = Int32), @__maxExpirationDate_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [i].[Key], [i].[ClientId], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[Data], [i].[Expiration], [i].[ExtraProperties], [i].[Id], [i].[SubjectId], [i].[Type]
FROM [IdentityServerPersistedGrants] AS [i]
WHERE [i].[Expiration] IS NOT NULL AND ([i].[Expiration] < @__maxExpirationDate_0)
ORDER BY [i].[ClientId]
2020-03-13 16:26:23.631 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:26:23.672 +08:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_1='?' (DbType = Int32), @__maxExpirationDate_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [i].[Id], [i].[ClientId], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[Data], [i].[DeviceCode], [i].[Expiration], [i].[ExtraProperties], [i].[SubjectId], [i].[UserCode]
FROM [IdentityServerDeviceFlowCodes] AS [i]
WHERE [i].[Expiration] < @__maxExpirationDate_0
ORDER BY [i].[ClientId]
2020-03-13 16:36:28.961 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-13 16:36:28.961 +08:00 [INF] CORS policy execution successful.
2020-03-13 16:36:28.961 +08:00 [INF] Request finished in 0.6174ms 204 
2020-03-13 16:36:29.011 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-13 16:36:29.011 +08:00 [INF] CORS policy execution successful.
2020-03-13 16:36:29.011 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 16:36:29.013 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-13 16:36:29.014 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-13 16:36:29.014 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-13 16:36:29.014 +08:00 [INF] No CORS policy found for the specified request.
2020-03-13 16:36:29.014 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-13 16:36:29.024 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-13 16:36:29.024 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-13 16:36:29.024 +08:00 [DBG] Start token request.
2020-03-13 16:36:29.024 +08:00 [DBG] Start client validation
2020-03-13 16:36:29.024 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-13 16:36:29.024 +08:00 [DBG] Start parsing for secret in post body
2020-03-13 16:36:29.025 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-13 16:36:29.025 +08:00 [DBG] Secret id found: XManagement_App
2020-03-13 16:36:29.027 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.125 +08:00 [INF] Executed DbCommand (70ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-13 16:36:29.134 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-13 16:36:29.134 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-13 16:36:29.134 +08:00 [DBG] Client validation success
2020-03-13 16:36:29.135 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU73VBPR8AI:00000002","TimeStamp":"2020-03-13T08:36:29.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-13 16:36:29.135 +08:00 [DBG] Start token request validation
2020-03-13 16:36:29.135 +08:00 [DBG] Start resource owner password token request validation
2020-03-13 16:36:29.137 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.152 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 16:36:29.157 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.227 +08:00 [INF] Executed DbCommand (68ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 16:36:29.235 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.251 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-13 16:36:29.253 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.280 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-13 16:36:29.285 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.291 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 16:36:29.293 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-13 16:36:29.316 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-13 16:36:29.316 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8AI:00000002","TimeStamp":"2020-03-13T08:36:29.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 16:36:29.319 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.359 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:36:29.360 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU73VBPR8AI:00000002","TimeStamp":"2020-03-13T08:36:29.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-13 16:36:29.361 +08:00 [DBG] Resource owner password token request validation success.
2020-03-13 16:36:29.361 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-13 16:36:29.362 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-13 16:36:29.362 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-13 16:36:29.364 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.421 +08:00 [INF] Executed DbCommand (56ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:36:29.446 +08:00 [INF] Executed DbCommand (20ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-13 16:36:29.454 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****XsEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU73VBPR8AI:00000002","TimeStamp":"2020-03-13T08:36:29.0000000Z","ProcessId":8028,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-13 16:36:29.454 +08:00 [DBG] Token request success.
2020-03-13 16:36:29.456 +08:00 [INF] Request finished in 443.5226ms 200 application/json; charset=UTF-8
2020-03-13 16:36:29.538 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-13 16:36:29.539 +08:00 [INF] Successfully validated the token.
2020-03-13 16:36:29.539 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 16:36:29.541 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:36:29.542 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-13 16:36:29.634 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 16:36:29.638 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:29.717 +08:00 [INF] Executed DbCommand (78ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-13 16:36:29.718 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 83.3537ms.
2020-03-13 16:36:29.719 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 16:36:29.719 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-13 16:36:29.719 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 177.0058ms
2020-03-13 16:36:29.719 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:36:29.720 +08:00 [INF] Request finished in 182.0663ms 200 application/json; charset=utf-8
2020-03-13 16:36:31.377 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-13 16:36:31.378 +08:00 [INF] Successfully validated the token.
2020-03-13 16:36:31.378 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 16:36:31.381 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:36:31.382 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-13 16:36:31.477 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-13 16:36:31.478 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 16:36:31.478 +08:00 [DBG] Not found in the cache, getting from the repository: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 16:36:31.480 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'PermissionManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:31.602 +08:00 [INF] Executed DbCommand (122ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 16:36:31.603 +08:00 [DBG] Setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 16:36:31.603 +08:00 [DBG] Finished setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-13 16:36:31.603 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 16:36:31.603 +08:00 [DBG] Not found in the cache, getting from the repository: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 16:36:31.611 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-13 16:36:31.620 +08:00 [DBG] Setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 16:36:31.620 +08:00 [DBG] Finished setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-13 16:36:31.620 +08:00 [INF] Authorization failed.
2020-03-13 16:36:31.626 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-13 16:36:31.626 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-13 16:36:31.626 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-13 16:36:31.626 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-13 16:36:31.627 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 244.8105ms
2020-03-13 16:36:31.627 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-13 16:36:31.631 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 16:36:31.645 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-13 16:36:31.652 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 16:36:31.652 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-13 16:36:31.655 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 16:36:31.655 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-13 16:36:31.655 +08:00 [INF] Request finished in 278.7696ms 403 application/json; charset=utf-8
2020-03-13 16:39:46.781 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/app/channel?page=1&limit=10  
2020-03-13 16:39:46.783 +08:00 [INF] Successfully validated the token.
2020-03-13 16:39:46.784 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-13 16:39:46.787 +08:00 [INF] Request finished in 5.8561ms 404 
2020-03-13 17:46:32.393 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-13 17:46:58.689 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-13 17:46:59.107 +08:00 [INF] Loaded ABP modules:
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-13 17:46:59.107 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-13 17:46:59.107 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-13 17:46:59.108 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-13 17:46:59.108 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-13 17:47:00.288 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-13 17:47:00.468 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-13 17:47:02.004 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-13 17:47:02.004 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-13 17:47:02.004 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-13 17:47:02.004 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-13 17:47:02.004 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-13 17:47:02.004 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-13 17:47:03.748 +08:00 [INF] Initialized all ABP modules.
2020-03-13 17:47:03.910 +08:00 [INF] Now listening on: http://localhost:44379
2020-03-13 17:47:03.910 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-13 17:47:03.910 +08:00 [INF] Hosting environment: Development
2020-03-13 17:47:03.910 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-13 17:47:05.164 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/  
2020-03-13 17:47:05.444 +08:00 [DBG] Login Url: /Account/Login
2020-03-13 17:47:05.444 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-13 17:47:05.444 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-13 17:47:05.444 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-13 17:47:05.444 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-13 17:47:05.444 +08:00 [DBG] Error Url: /home/error
2020-03-13 17:47:05.444 +08:00 [DBG] Error Id Parameter: errorId
2020-03-13 17:47:05.531 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 17:47:09.037 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 17:47:10.903 +08:00 [INF] Executed DbCommand (171ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 17:47:11.161 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-13 17:47:11.179 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-13 17:47:11.340 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 17:47:11.525 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-13 17:47:12.044 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-13 17:47:12.059 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 0.8383ms.
2020-03-13 17:47:12.076 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-13 17:47:12.092 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 552.3678ms
2020-03-13 17:47:12.093 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-13 17:47:12.159 +08:00 [INF] Request finished in 6997.6199ms 302 
2020-03-13 17:47:12.201 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/index.html  
2020-03-13 17:47:12.216 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 17:47:12.279 +08:00 [INF] Request finished in 77.978ms 200 text/html;charset=utf-8
2020-03-13 17:47:12.714 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/v1/swagger.json  
2020-03-13 17:47:12.718 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-13 17:47:13.097 +08:00 [INF] Request finished in 383.6655ms 200 application/json;charset=utf-8
2020-03-16 08:51:32.162 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-16 09:10:59.350 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-16 09:12:11.225 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-16 09:12:11.406 +08:00 [INF] Loaded ABP modules:
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-16 09:12:11.406 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-16 09:12:11.407 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-16 09:12:11.407 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-16 09:12:11.407 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-16 09:12:13.101 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-16 09:12:14.280 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-16 09:12:15.130 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-16 09:12:15.130 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-16 09:12:15.130 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-16 09:12:15.130 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-16 09:12:15.130 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-16 09:12:15.131 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-16 09:12:42.687 +08:00 [INF] Initialized all ABP modules.
2020-03-16 09:12:43.005 +08:00 [INF] Now listening on: http://localhost:44379
2020-03-16 09:12:43.006 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-16 09:12:43.006 +08:00 [INF] Hosting environment: Development
2020-03-16 09:12:43.006 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-16 09:12:45.021 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/  
2020-03-16 09:12:45.547 +08:00 [DBG] Login Url: /Account/Login
2020-03-16 09:12:45.547 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-16 09:12:45.547 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-16 09:12:45.547 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-16 09:12:45.547 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-16 09:12:45.547 +08:00 [DBG] Error Url: /home/error
2020-03-16 09:12:45.547 +08:00 [DBG] Error Id Parameter: errorId
2020-03-16 09:12:45.658 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 09:12:59.608 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 09:13:17.253 +08:00 [ERR] An error occurred using the connection to database 'LintSense' on server 'WIN-3V7B89S0723\MSSQLSERVER2016'.
2020-03-16 09:13:17.282 +08:00 [ERR] Connection id "0HLU98SGLC68P", Request id "0HLU98SGLC68P:00000001": An unhandled exception was thrown by the application.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at Microsoft.Data.SqlClient.SqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction()
   at Volo.Abp.Uow.EntityFrameworkCore.UnitOfWorkDbContextProvider`1.CreateDbContextWithTransaction(IUnitOfWork unitOfWork)
   at Volo.Abp.Uow.EntityFrameworkCore.UnitOfWorkDbContextProvider`1.CreateDbContext(IUnitOfWork unitOfWork)
   at Volo.Abp.Uow.EntityFrameworkCore.UnitOfWorkDbContextProvider`1.CreateDbContext(IUnitOfWork unitOfWork, String connectionStringName, String connectionString)
   at Volo.Abp.Uow.EntityFrameworkCore.UnitOfWorkDbContextProvider`1.<>c__DisplayClass3_0.<GetDbContext>b__0()
   at System.Collections.Generic.AbpDictionaryExtensions.<>c__DisplayClass6_0`2.<GetOrAdd>b__0(TKey k)
   at System.Collections.Generic.AbpDictionaryExtensions.GetOrAdd[TKey,TValue](IDictionary`2 dictionary, TKey key, Func`2 factory)
   at System.Collections.Generic.AbpDictionaryExtensions.GetOrAdd[TKey,TValue](IDictionary`2 dictionary, TKey key, Func`1 factory)
   at Volo.Abp.Uow.UnitOfWork.GetOrAddDatabaseApi(String key, Func`1 factory)
   at Volo.Abp.Uow.EntityFrameworkCore.UnitOfWorkDbContextProvider`1.GetDbContext()
   at Volo.Abp.Domain.Repositories.EntityFrameworkCore.EfCoreRepository`2.get_DbContext()
   at Volo.Abp.Domain.Repositories.EntityFrameworkCore.EfCoreRepository`2.get_DbSet()
   at Volo.Abp.SettingManagement.EntityFrameworkCore.EfCoreSettingRepository.FindAsync(String name, String providerName, String providerKey)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Volo.Abp.SettingManagement.SettingManagementStore.GetCacheItemAsync(String name, String providerName, String providerKey)
   at Volo.Abp.SettingManagement.SettingManagementStore.GetOrNullAsync(String name, String providerName, String providerKey)
   at Volo.Abp.Settings.TenantSettingValueProvider.GetOrNullAsync(SettingDefinition setting)
   at Volo.Abp.Settings.SettingProvider.GetOrNullValueFromProvidersAsync(IEnumerable`1 providers, SettingDefinition setting)
   at Volo.Abp.Settings.SettingProvider.GetOrNullAsync(String name)
   at Microsoft.AspNetCore.RequestLocalization.DefaultAbpRequestLocalizationOptionsProvider.GetLocalizationOptionsAsync()
   at Microsoft.AspNetCore.RequestLocalization.AbpRequestLocalizationMiddleware.InvokeAsync(HttpContext context, RequestDelegate next)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_1.<<UseMiddlewareInterface>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Volo.Abp.AspNetCore.MultiTenancy.MultiTenancyMiddleware.InvokeAsync(HttpContext context, RequestDelegate next)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_1.<<UseMiddlewareInterface>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Builder.ApplicationBuilderAbpJwtTokenMiddlewareExtension.<>c__DisplayClass0_0.<<UseJwtTokenMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Volo.Abp.AspNetCore.Tracing.AbpCorrelationIdMiddleware.InvokeAsync(HttpContext context, RequestDelegate next)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_1.<<UseMiddlewareInterface>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:-1,State:0,Class:20
2020-03-16 09:13:17.342 +08:00 [INF] Request finished in 32326.7601ms 500 
2020-03-16 09:14:48.091 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-16 09:15:25.443 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-16 09:15:25.851 +08:00 [INF] Loaded ABP modules:
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-16 09:15:25.851 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-16 09:15:25.852 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-16 09:15:25.852 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-16 09:15:25.853 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-16 09:15:25.853 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-16 09:15:27.117 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-16 09:15:27.450 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-16 09:15:28.759 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-16 09:15:28.759 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-16 09:15:28.759 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-16 09:15:28.759 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-16 09:15:28.759 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-16 09:15:28.759 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-16 09:15:32.375 +08:00 [INF] Initialized all ABP modules.
2020-03-16 09:15:32.621 +08:00 [INF] Now listening on: http://localhost:44379
2020-03-16 09:15:32.678 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-16 09:15:32.678 +08:00 [INF] Hosting environment: Development
2020-03-16 09:15:32.678 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-16 09:15:33.884 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/  
2020-03-16 09:15:34.117 +08:00 [DBG] Login Url: /Account/Login
2020-03-16 09:15:34.117 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-16 09:15:34.117 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-16 09:15:34.117 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-16 09:15:34.117 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-16 09:15:34.117 +08:00 [DBG] Error Url: /home/error
2020-03-16 09:15:34.117 +08:00 [DBG] Error Id Parameter: errorId
2020-03-16 09:15:34.198 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 09:15:38.457 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 09:15:41.667 +08:00 [INF] Executed DbCommand (310ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 09:15:42.002 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 09:15:42.055 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 09:15:42.256 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-16 09:15:42.435 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-16 09:15:42.890 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-16 09:15:42.903 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 0.7713ms.
2020-03-16 09:15:42.922 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-16 09:15:42.935 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 488.0141ms
2020-03-16 09:15:42.935 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-16 09:15:43.014 +08:00 [INF] Request finished in 9134.7915ms 302 
2020-03-16 09:15:43.161 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/index.html  
2020-03-16 09:15:43.177 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 09:15:43.266 +08:00 [INF] Request finished in 105.1571ms 200 text/html;charset=utf-8
2020-03-16 09:15:43.528 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/v1/swagger.json  
2020-03-16 09:15:43.532 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 09:15:43.943 +08:00 [INF] Request finished in 415.021ms 200 application/json;charset=utf-8
2020-03-16 11:03:29.967 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-16 11:04:01.915 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-16 11:04:02.292 +08:00 [INF] Loaded ABP modules:
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-16 11:04:02.293 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-16 11:04:02.294 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-16 11:04:02.294 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-16 11:04:03.753 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-16 11:04:03.969 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-16 11:04:05.642 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-16 11:04:05.642 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-16 11:04:05.642 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-16 11:04:05.642 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-16 11:04:05.642 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-16 11:04:05.642 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-16 11:04:08.897 +08:00 [INF] Initialized all ABP modules.
2020-03-16 11:04:09.186 +08:00 [INF] Now listening on: http://localhost:44379
2020-03-16 11:04:09.187 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-16 11:04:09.187 +08:00 [INF] Hosting environment: Development
2020-03-16 11:04:09.187 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-16 11:04:10.168 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/  
2020-03-16 11:04:10.365 +08:00 [DBG] Login Url: /Account/Login
2020-03-16 11:04:10.366 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-16 11:04:10.366 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-16 11:04:10.366 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-16 11:04:10.366 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-16 11:04:10.366 +08:00 [DBG] Error Url: /home/error
2020-03-16 11:04:10.366 +08:00 [DBG] Error Id Parameter: errorId
2020-03-16 11:04:10.446 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:04:14.024 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:16.544 +08:00 [INF] Executed DbCommand (246ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:16.833 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:16.868 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:17.032 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-16 11:04:17.227 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-16 11:04:17.674 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-16 11:04:17.692 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 1.0194ms.
2020-03-16 11:04:17.714 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-16 11:04:17.732 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 489.6501ms
2020-03-16 11:04:17.733 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-16 11:04:17.791 +08:00 [INF] Request finished in 7628.3953ms 302 
2020-03-16 11:04:17.857 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/index.html  
2020-03-16 11:04:17.899 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:04:18.020 +08:00 [INF] Request finished in 163.4855ms 200 text/html;charset=utf-8
2020-03-16 11:04:18.411 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/v1/swagger.json  
2020-03-16 11:04:18.417 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:04:18.776 +08:00 [INF] Request finished in 365.6607ms 200 application/json;charset=utf-8
2020-03-16 11:04:46.236 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-16 11:04:46.260 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:04:46.267 +08:00 [INF] Request finished in 30.7227ms 204 
2020-03-16 11:04:46.305 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-16 11:04:46.307 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:04:46.310 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:04:46.324 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-16 11:04:47.370 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:47.443 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT DISTINCT [i].[Origin]
FROM [IdentityServerClientCorsOrigins] AS [i]
2020-03-16 11:04:47.491 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-16 11:04:47.494 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-16 11:04:47.495 +08:00 [INF] No CORS policy found for the specified request.
2020-03-16 11:04:47.496 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-16 11:04:48.370 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.407 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.416 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.435 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.443 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.449 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.454 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.461 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.488 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.492 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.497 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.502 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.509 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.514 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.519 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.523 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.527 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.532 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.536 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.540 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.543 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.550 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.558 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.563 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.569 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.575 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.579 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.586 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.591 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.595 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.601 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.605 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.609 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.613 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.619 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.623 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.627 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.633 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.637 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.641 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.645 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.651 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:48.655 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:48.659 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:04:49.223 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-16 11:04:49.224 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-16 11:04:49.279 +08:00 [DBG] Start token request.
2020-03-16 11:04:49.286 +08:00 [DBG] Start client validation
2020-03-16 11:04:49.298 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-16 11:04:49.303 +08:00 [DBG] Start parsing for secret in post body
2020-03-16 11:04:49.322 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-16 11:04:49.322 +08:00 [DBG] Secret id found: XManagement_App
2020-03-16 11:04:49.344 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:49.891 +08:00 [INF] Executed DbCommand (60ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-16 11:04:50.665 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-16 11:04:50.700 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-16 11:04:50.700 +08:00 [DBG] Client validation success
2020-03-16 11:04:50.730 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU9AQP7DMDC:00000002","TimeStamp":"2020-03-16T03:04:50.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-16 11:04:50.745 +08:00 [DBG] Start token request validation
2020-03-16 11:04:50.761 +08:00 [DBG] Start resource owner password token request validation
2020-03-16 11:04:50.795 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:50.967 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:04:51.018 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:51.221 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:04:51.455 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:04:51.475 +08:00 [ERR] An error occurred using the connection to database 'LintSense' on server 'angkor-dev\MSSQLSERVER2016'.
2020-03-16 11:04:51.608 +08:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Volo.Abp.IdentityServer.EntityFrameworkCore.IdentityServerDbContext'.
System.Threading.Tasks.TaskCanceledException: A task was canceled.
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.Threading.Tasks.TaskCanceledException: A task was canceled.
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2020-03-16 11:04:51.640 +08:00 [INF] {"Details":"System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)\r\n   at Volo.Abp.IdentityServer.IdentityResources.IdentityResourceRepository.GetListByScopesAsync(String[] scopeNames, Boolean includeDetails, CancellationToken cancellationToken)\r\n   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)\r\n   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()\r\n   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)\r\n   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)\r\n   at Volo.Abp.IdentityServer.ResourceStore.FindIdentityResourcesByScopeAsync(IEnumerable`1 scopeNames)\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.FindResourcesByScopeAsync(IResourceStore store, IEnumerable`1 scopeNames)\r\n   at IdentityServer4.Validation.ScopeValidator.AreScopesValidAsync(IEnumerable`1 requestedScopes, Boolean filterIdentityScopes)\r\n   at IdentityServer4.Validation.TokenRequestValidator.ValidateRequestedScopesAsync(NameValueCollection parameters, Boolean ignoreImplicitIdentityScopes, Boolean ignoreImplicitOfflineAccess)\r\n   at IdentityServer4.Validation.TokenRequestValidator.ValidateResourceOwnerCredentialRequestAsync(NameValueCollection parameters)\r\n   at IdentityServer4.Validation.TokenRequestValidator.RunValidationAsync(Func`2 validationFunc, NameValueCollection parameters)\r\n   at IdentityServer4.Validation.TokenRequestValidator.ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"A task was canceled.","ActivityId":"0HLU9AQP7DMDC:00000002","TimeStamp":"2020-03-16T03:04:51.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-03-16 11:04:51.640 +08:00 [FTL] Unhandled exception: A task was canceled.
System.Threading.Tasks.TaskCanceledException: A task was canceled.
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Volo.Abp.IdentityServer.IdentityResources.IdentityResourceRepository.GetListByScopesAsync(String[] scopeNames, Boolean includeDetails, CancellationToken cancellationToken)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Volo.Abp.IdentityServer.ResourceStore.FindIdentityResourcesByScopeAsync(IEnumerable`1 scopeNames)
   at IdentityServer4.Stores.IResourceStoreExtensions.FindResourcesByScopeAsync(IResourceStore store, IEnumerable`1 scopeNames)
   at IdentityServer4.Validation.ScopeValidator.AreScopesValidAsync(IEnumerable`1 requestedScopes, Boolean filterIdentityScopes)
   at IdentityServer4.Validation.TokenRequestValidator.ValidateRequestedScopesAsync(NameValueCollection parameters, Boolean ignoreImplicitIdentityScopes, Boolean ignoreImplicitOfflineAccess)
   at IdentityServer4.Validation.TokenRequestValidator.ValidateResourceOwnerCredentialRequestAsync(NameValueCollection parameters)
   at IdentityServer4.Validation.TokenRequestValidator.RunValidationAsync(Func`2 validationFunc, NameValueCollection parameters)
   at IdentityServer4.Validation.TokenRequestValidator.ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-03-16 11:04:51.645 +08:00 [ERR] Connection id "0HLU9AQP7DMDC", Request id "0HLU9AQP7DMDC:00000002": An unhandled exception was thrown by the application.
System.Threading.Tasks.TaskCanceledException: A task was canceled.
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Volo.Abp.IdentityServer.IdentityResources.IdentityResourceRepository.GetListByScopesAsync(String[] scopeNames, Boolean includeDetails, CancellationToken cancellationToken)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Volo.Abp.IdentityServer.ResourceStore.FindIdentityResourcesByScopeAsync(IEnumerable`1 scopeNames)
   at IdentityServer4.Stores.IResourceStoreExtensions.FindResourcesByScopeAsync(IResourceStore store, IEnumerable`1 scopeNames)
   at IdentityServer4.Validation.ScopeValidator.AreScopesValidAsync(IEnumerable`1 requestedScopes, Boolean filterIdentityScopes)
   at IdentityServer4.Validation.TokenRequestValidator.ValidateRequestedScopesAsync(NameValueCollection parameters, Boolean ignoreImplicitIdentityScopes, Boolean ignoreImplicitOfflineAccess)
   at IdentityServer4.Validation.TokenRequestValidator.ValidateResourceOwnerCredentialRequestAsync(NameValueCollection parameters)
   at IdentityServer4.Validation.TokenRequestValidator.RunValidationAsync(Func`2 validationFunc, NameValueCollection parameters)
   at IdentityServer4.Validation.TokenRequestValidator.ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessTokenRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.TokenEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>g__InvokeCoreAwaited|15_0(HttpContext context, Task`1 policyTask)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Volo.Abp.AspNetCore.MultiTenancy.MultiTenancyMiddleware.InvokeAsync(HttpContext context, RequestDelegate next)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_1.<<UseMiddlewareInterface>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Builder.ApplicationBuilderAbpJwtTokenMiddlewareExtension.<>c__DisplayClass0_0.<<UseJwtTokenMiddleware>b__0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Volo.Abp.AspNetCore.Tracing.AbpCorrelationIdMiddleware.InvokeAsync(HttpContext context, RequestDelegate next)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_1.<<UseMiddlewareInterface>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2020-03-16 11:04:51.648 +08:00 [INF] Request finished in 5341.8467ms 0 
2020-03-16 11:05:08.965 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-16 11:05:08.969 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:05:08.971 +08:00 [INF] Request finished in 7.6694ms 204 
2020-03-16 11:05:08.975 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-16 11:05:08.979 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:05:08.982 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:05:08.991 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-16 11:05:09.015 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-16 11:05:09.016 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-16 11:05:09.016 +08:00 [INF] No CORS policy found for the specified request.
2020-03-16 11:05:09.017 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-16 11:05:09.036 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-16 11:05:09.036 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-16 11:05:09.037 +08:00 [DBG] Start token request.
2020-03-16 11:05:09.037 +08:00 [DBG] Start client validation
2020-03-16 11:05:09.037 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-16 11:05:09.037 +08:00 [DBG] Start parsing for secret in post body
2020-03-16 11:05:09.038 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-16 11:05:09.038 +08:00 [DBG] Secret id found: XManagement_App
2020-03-16 11:05:09.042 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:09.086 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-16 11:05:09.097 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-16 11:05:09.098 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-16 11:05:09.098 +08:00 [DBG] Client validation success
2020-03-16 11:05:09.099 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU9AQP7DMDD:00000002","TimeStamp":"2020-03-16T03:05:09.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-16 11:05:09.100 +08:00 [DBG] Start token request validation
2020-03-16 11:05:09.100 +08:00 [DBG] Start resource owner password token request validation
2020-03-16 11:05:09.104 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:09.120 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:05:09.126 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:09.183 +08:00 [INF] Executed DbCommand (55ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:05:09.191 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:09.204 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:05:09.209 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:09.252 +08:00 [INF] Executed DbCommand (41ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:05:09.564 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:09.606 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-16 11:05:09.705 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-16 11:05:09.768 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-16 11:05:09.770 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU9AQP7DMDD:00000002","TimeStamp":"2020-03-16T03:05:09.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-16 11:05:09.819 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:09.962 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:05:09.972 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU9AQP7DMDD:00000002","TimeStamp":"2020-03-16T03:05:09.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-16 11:05:09.972 +08:00 [DBG] Resource owner password token request validation success.
2020-03-16 11:05:09.992 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-16 11:05:10.044 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-16 11:05:10.045 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-16 11:05:10.059 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:10.091 +08:00 [INF] Executed DbCommand (31ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:05:10.297 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-16 11:05:10.618 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****jr-w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU9AQP7DMDD:00000002","TimeStamp":"2020-03-16T03:05:10.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-16 11:05:10.620 +08:00 [DBG] Token request success.
2020-03-16 11:05:10.656 +08:00 [INF] Request finished in 1681.1938ms 200 application/json; charset=UTF-8
2020-03-16 11:05:11.187 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-16 11:05:11.936 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/.well-known/openid-configuration  
2020-03-16 11:05:11.938 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:05:11.943 +08:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-03-16 11:05:11.956 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-03-16 11:05:11.956 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-03-16 11:05:11.959 +08:00 [DBG] Start discovery request
2020-03-16 11:05:12.017 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:12.072 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE (@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:05:12.182 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:12.303 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE (@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:05:12.478 +08:00 [INF] Request finished in 542.2978ms 200 application/json; charset=UTF-8
2020-03-16 11:05:12.803 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/.well-known/openid-configuration/jwks  
2020-03-16 11:05:12.805 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:05:12.808 +08:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-03-16 11:05:12.816 +08:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-03-16 11:05:12.816 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-03-16 11:05:12.820 +08:00 [DBG] Start key discovery request
2020-03-16 11:05:12.891 +08:00 [INF] Request finished in 87.8684ms 200 application/jwk-set+json; charset=UTF-8
2020-03-16 11:05:13.108 +08:00 [INF] Successfully validated the token.
2020-03-16 11:05:13.117 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:05:13.129 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:05:13.144 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:05:13.148 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.156 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.166 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.172 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.176 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.177 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.180 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.184 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.184 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.187 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.191 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.191 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.194 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.196 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.197 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.200 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.203 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.204 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.206 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.210 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.211 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.214 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.219 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.219 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.223 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.227 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.228 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.232 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.237 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.238 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.241 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.246 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2)
2020-03-16 11:05:13.247 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.584 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:05:13.629 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:13.667 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:05:13.699 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 114.2343ms.
2020-03-16 11:05:13.713 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:13.755 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-16 11:05:13.785 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 640.9769ms
2020-03-16 11:05:13.787 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:05:13.795 +08:00 [INF] Request finished in 2608.4309ms 200 application/json; charset=utf-8
2020-03-16 11:05:15.683 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-16 11:05:15.700 +08:00 [INF] Successfully validated the token.
2020-03-16 11:05:15.700 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:05:15.707 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:05:15.847 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:05:16.210 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:05:16.460 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:05:16.460 +08:00 [DBG] Not found in the cache, getting from the repository: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:05:16.483 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'PermissionManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:16.504 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-16 11:05:16.508 +08:00 [DBG] Setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:05:16.523 +08:00 [DBG] Finished setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:05:16.572 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:05:16.572 +08:00 [DBG] Not found in the cache, getting from the repository: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:05:16.578 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-16 11:05:16.578 +08:00 [DBG] Setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:05:16.578 +08:00 [DBG] Finished setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:05:16.585 +08:00 [INF] Authorization failed.
2020-03-16 11:05:16.606 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:05:16.612 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:05:16.613 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:05:16.618 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:05:16.623 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 775.6918ms
2020-03-16 11:05:16.623 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:05:16.751 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:05:16.991 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:05:17.020 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:05:17.021 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:05:17.068 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:17.068 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:05:17.071 +08:00 [INF] Request finished in 1388.5646ms 403 application/json; charset=utf-8
2020-03-16 11:07:41.104 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-16 11:07:41.109 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:07:41.121 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:07:41.125 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:07:41.238 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:07:41.243 +08:00 [INF] Authorization failed.
2020-03-16 11:07:41.255 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:07:41.255 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:07:41.255 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:07:41.258 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:07:41.259 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 133.7946ms
2020-03-16 11:07:41.260 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:07:41.336 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:07:41.407 +08:00 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:07:41.417 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:07:41.419 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:07:41.422 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:07:41.422 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:07:41.423 +08:00 [INF] Request finished in 323.1244ms 401 application/json; charset=utf-8
2020-03-16 11:12:29.838 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/app/auditLog?page=1&limit=10  
2020-03-16 11:12:29.844 +08:00 [INF] Successfully validated the token.
2020-03-16 11:12:29.845 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:12:29.859 +08:00 [INF] Request finished in 17.6637ms 404 
2020-03-16 11:12:42.158 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/app/auditLog?page=1&limit=10  
2020-03-16 11:12:42.164 +08:00 [INF] Successfully validated the token.
2020-03-16 11:12:42.165 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:12:42.175 +08:00 [INF] Request finished in 17.0678ms 404 
2020-03-16 11:13:43.161 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-16 11:13:43.162 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:13:43.163 +08:00 [INF] Request finished in 1.3698ms 204 
2020-03-16 11:13:43.168 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-16 11:13:43.168 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:13:43.168 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:13:43.171 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-16 11:13:43.172 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-16 11:13:43.172 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-16 11:13:43.172 +08:00 [INF] No CORS policy found for the specified request.
2020-03-16 11:13:43.172 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-16 11:13:43.179 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-16 11:13:43.179 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-16 11:13:43.179 +08:00 [DBG] Start token request.
2020-03-16 11:13:43.179 +08:00 [DBG] Start client validation
2020-03-16 11:13:43.179 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-16 11:13:43.179 +08:00 [DBG] Start parsing for secret in post body
2020-03-16 11:13:43.180 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-16 11:13:43.180 +08:00 [DBG] Secret id found: XManagement_App
2020-03-16 11:13:43.185 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.224 +08:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-16 11:13:43.234 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-16 11:13:43.234 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-16 11:13:43.234 +08:00 [DBG] Client validation success
2020-03-16 11:13:43.242 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU9AQP7DMDK:00000002","TimeStamp":"2020-03-16T03:13:43.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-16 11:13:43.243 +08:00 [DBG] Start token request validation
2020-03-16 11:13:43.243 +08:00 [DBG] Start resource owner password token request validation
2020-03-16 11:13:43.244 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.261 +08:00 [INF] Executed DbCommand (16ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:13:43.290 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.348 +08:00 [INF] Executed DbCommand (58ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:13:43.351 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.366 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:13:43.368 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.396 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:13:43.404 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.417 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-16 11:13:43.423 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-16 11:13:43.433 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-16 11:13:43.434 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU9AQP7DMDK:00000002","TimeStamp":"2020-03-16T03:13:43.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-16 11:13:43.436 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.446 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:13:43.448 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU9AQP7DMDK:00000002","TimeStamp":"2020-03-16T03:13:43.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-16 11:13:43.448 +08:00 [DBG] Resource owner password token request validation success.
2020-03-16 11:13:43.448 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-16 11:13:43.448 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-16 11:13:43.448 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-16 11:13:43.449 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.450 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:13:43.456 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-16 11:13:43.458 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****3tAQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU9AQP7DMDK:00000002","TimeStamp":"2020-03-16T03:13:43.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-16 11:13:43.458 +08:00 [DBG] Token request success.
2020-03-16 11:13:43.459 +08:00 [INF] Request finished in 291.4264ms 200 application/json; charset=UTF-8
2020-03-16 11:13:43.484 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-16 11:13:43.486 +08:00 [INF] Successfully validated the token.
2020-03-16 11:13:43.486 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:13:43.488 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:13:43.489 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:13:43.535 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:13:43.537 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:13:43.557 +08:00 [INF] Executed DbCommand (19ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:13:43.558 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 22.75ms.
2020-03-16 11:13:43.559 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:13:43.559 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-16 11:13:43.560 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 70.7482ms
2020-03-16 11:13:43.560 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:13:43.560 +08:00 [INF] Request finished in 75.9067ms 200 application/json; charset=utf-8
2020-03-16 11:13:43.832 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/app/auditLog?page=1&limit=10  
2020-03-16 11:13:43.836 +08:00 [INF] Successfully validated the token.
2020-03-16 11:13:43.836 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:13:43.846 +08:00 [INF] Request finished in 13.5469ms 404 
2020-03-16 11:13:59.679 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-16 11:13:59.684 +08:00 [INF] Successfully validated the token.
2020-03-16 11:13:59.684 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:13:59.689 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-16 11:13:59.705 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-16 11:14:00.006 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:00.011 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.011 +08:00 [DBG] Not found in the cache, getting from the repository: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.015 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'PermissionManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:00.031 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-16 11:14:00.032 +08:00 [DBG] Setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.032 +08:00 [DBG] Finished setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.033 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.033 +08:00 [DBG] Not found in the cache, getting from the repository: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.041 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-16 11:14:00.042 +08:00 [DBG] Setting the cache item: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.042 +08:00 [DBG] Finished setting the cache item: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:00.042 +08:00 [INF] Authorization failed.
2020-03-16 11:14:00.052 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:14:00.053 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:14:00.053 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:14:00.053 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:14:00.054 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 349.0982ms
2020-03-16 11:14:00.054 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-16 11:14:00.070 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:00.149 +08:00 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:14:00.189 +08:00 [INF] Executed DbCommand (37ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:00.218 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:00.230 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:00.230 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:00.233 +08:00 [INF] Request finished in 554.0486ms 403 application/json; charset=utf-8
2020-03-16 11:14:00.735 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-16 11:14:00.741 +08:00 [INF] Successfully validated the token.
2020-03-16 11:14:00.752 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:14:00.758 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:00.785 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:14:01.129 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:01.142 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:01.142 +08:00 [DBG] Not found in the cache, getting from the repository: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:01.147 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'PermissionManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:01.206 +08:00 [INF] Executed DbCommand (53ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-16 11:14:01.235 +08:00 [DBG] Setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:01.235 +08:00 [DBG] Finished setting the cache item: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:01.236 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:01.236 +08:00 [DBG] Not found in the cache, getting from the repository: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:01.261 +08:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64), @__providerKey_2='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[TenantId]
FROM [AbpPermissionGrants] AS [a]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ((([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND ([a].[ProviderKey] = @__providerKey_2))
2020-03-16 11:14:01.267 +08:00 [DBG] Setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:01.267 +08:00 [DBG] Finished setting the cache item: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:01.267 +08:00 [INF] Authorization failed.
2020-03-16 11:14:01.293 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:14:01.293 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:14:01.293 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:14:01.293 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:14:01.294 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 509.2819ms
2020-03-16 11:14:01.294 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:01.304 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:01.380 +08:00 [INF] Executed DbCommand (68ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:14:01.393 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:01.405 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:01.410 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:01.410 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:01.411 +08:00 [INF] Request finished in 676.2538ms 403 application/json; charset=utf-8
2020-03-16 11:14:02.090 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-16 11:14:02.093 +08:00 [INF] Successfully validated the token.
2020-03-16 11:14:02.093 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:14:02.098 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:02.102 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:14:02.232 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:02.236 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:02.239 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:02.239 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:02.240 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:02.240 +08:00 [INF] Authorization failed.
2020-03-16 11:14:02.247 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:14:02.248 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:14:02.248 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:14:02.249 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:14:02.250 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 147.3602ms
2020-03-16 11:14:02.250 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:02.266 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:02.296 +08:00 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:14:02.323 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:02.325 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:02.331 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:02.331 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:02.333 +08:00 [INF] Request finished in 242.735ms 403 application/json; charset=utf-8
2020-03-16 11:14:02.752 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/users  
2020-03-16 11:14:02.755 +08:00 [INF] Successfully validated the token.
2020-03-16 11:14:02.756 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:14:02.770 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:02.772 +08:00 [INF] Route matched with {area = "identity", controller = "User", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityUserDto]] GetListAsync(Volo.Abp.Identity.GetIdentityUsersInput) on controller Volo.Abp.Identity.IdentityUserController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:14:02.862 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:02.865 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:02.866 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Users
2020-03-16 11:14:02.866 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:02.866 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Users
2020-03-16 11:14:02.866 +08:00 [INF] Authorization failed.
2020-03-16 11:14:02.874 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:14:02.875 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Users",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:14:02.875 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Users
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Users
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:14:02.875 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:14:02.877 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi) in 104.7539ms
2020-03-16 11:14:02.877 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityUserController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:02.894 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:02.958 +08:00 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:14:03.028 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:03.029 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:03.033 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:03.033 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:03.034 +08:00 [INF] Request finished in 281.7314ms 403 application/json; charset=utf-8
2020-03-16 11:14:04.103 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-16 11:14:04.105 +08:00 [INF] Successfully validated the token.
2020-03-16 11:14:04.105 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:14:04.108 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:04.109 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:14:04.175 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:04.179 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:14:04.179 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:14:04.179 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:14:04.180 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:14:04.180 +08:00 [INF] Authorization failed.
2020-03-16 11:14:04.192 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:14:04.192 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:14:04.193 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:14:04.193 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:14:04.195 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 85.0981ms
2020-03-16 11:14:04.195 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:04.223 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:04.414 +08:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:14:04.422 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:04.429 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:04.434 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:04.434 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:04.437 +08:00 [INF] Request finished in 333.7166ms 403 application/json; charset=utf-8
2020-03-16 11:14:04.507 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-16 11:14:04.509 +08:00 [INF] Successfully validated the token.
2020-03-16 11:14:04.510 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:14:04.513 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-16 11:14:04.514 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-16 11:14:04.637 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:04.639 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:04.639 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:04.639 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:04.639 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:04.639 +08:00 [INF] Authorization failed.
2020-03-16 11:14:04.645 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:14:04.645 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:14:04.645 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:14:04.645 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:14:04.650 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 135.6911ms
2020-03-16 11:14:04.651 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-16 11:14:04.658 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:04.673 +08:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:14:04.676 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:04.677 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:04.679 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:04.679 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:04.679 +08:00 [INF] Request finished in 172.3244ms 403 application/json; charset=utf-8
2020-03-16 11:14:40.512 +08:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:44379/connect/token  
2020-03-16 11:14:40.513 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:14:40.513 +08:00 [INF] Request finished in 1.3289ms 204 
2020-03-16 11:14:40.517 +08:00 [INF] Request starting HTTP/1.1 POST http://localhost:44379/connect/token application/x-www-form-urlencoded 164
2020-03-16 11:14:40.518 +08:00 [INF] CORS policy execution successful.
2020-03-16 11:14:40.519 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:14:40.521 +08:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:9527
2020-03-16 11:14:40.524 +08:00 [WRN] Origin is not allowed: http://localhost:9527
2020-03-16 11:14:40.524 +08:00 [WRN] CorsPolicyService did not allow origin: http://localhost:9527
2020-03-16 11:14:40.524 +08:00 [INF] No CORS policy found for the specified request.
2020-03-16 11:14:40.524 +08:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-03-16 11:14:40.541 +08:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-03-16 11:14:40.541 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-03-16 11:14:40.541 +08:00 [DBG] Start token request.
2020-03-16 11:14:40.541 +08:00 [DBG] Start client validation
2020-03-16 11:14:40.541 +08:00 [DBG] Start parsing Basic Authentication secret
2020-03-16 11:14:40.541 +08:00 [DBG] Start parsing for secret in post body
2020-03-16 11:14:40.542 +08:00 [DBG] Parser found secret: PostBodySecretParser
2020-03-16 11:14:40.542 +08:00 [DBG] Secret id found: XManagement_App
2020-03-16 11:14:40.546 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.601 +08:00 [INF] Executed DbCommand (46ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__clientId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AbsoluteRefreshTokenLifetime], [t].[AccessTokenLifetime], [t].[AccessTokenType], [t].[AllowAccessTokensViaBrowser], [t].[AllowOfflineAccess], [t].[AllowPlainTextPkce], [t].[AllowRememberConsent], [t].[AlwaysIncludeUserClaimsInIdToken], [t].[AlwaysSendClientClaims], [t].[AuthorizationCodeLifetime], [t].[BackChannelLogoutSessionRequired], [t].[BackChannelLogoutUri], [t].[ClientClaimsPrefix], [t].[ClientId], [t].[ClientName], [t].[ClientUri], [t].[ConcurrencyStamp], [t].[ConsentLifetime], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Description], [t].[DeviceCodeLifetime], [t].[EnableLocalLogin], [t].[Enabled], [t].[ExtraProperties], [t].[FrontChannelLogoutSessionRequired], [t].[FrontChannelLogoutUri], [t].[IdentityTokenLifetime], [t].[IncludeJwtId], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LogoUri], [t].[PairWiseSubjectSalt], [t].[ProtocolType], [t].[RefreshTokenExpiration], [t].[RefreshTokenUsage], [t].[RequireClientSecret], [t].[RequireConsent], [t].[RequirePkce], [t].[SlidingRefreshTokenLifetime], [t].[UpdateAccessTokenClaimsOnRefresh], [t].[UserCodeType], [t].[UserSsoLifetime], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i4].[Description], [i4].[Expiration], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key], [i8].[Value]
FROM (
    SELECT TOP(1) [i].[Id], [i].[AbsoluteRefreshTokenLifetime], [i].[AccessTokenLifetime], [i].[AccessTokenType], [i].[AllowAccessTokensViaBrowser], [i].[AllowOfflineAccess], [i].[AllowPlainTextPkce], [i].[AllowRememberConsent], [i].[AlwaysIncludeUserClaimsInIdToken], [i].[AlwaysSendClientClaims], [i].[AuthorizationCodeLifetime], [i].[BackChannelLogoutSessionRequired], [i].[BackChannelLogoutUri], [i].[ClientClaimsPrefix], [i].[ClientId], [i].[ClientName], [i].[ClientUri], [i].[ConcurrencyStamp], [i].[ConsentLifetime], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DeviceCodeLifetime], [i].[EnableLocalLogin], [i].[Enabled], [i].[ExtraProperties], [i].[FrontChannelLogoutSessionRequired], [i].[FrontChannelLogoutUri], [i].[IdentityTokenLifetime], [i].[IncludeJwtId], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[LogoUri], [i].[PairWiseSubjectSalt], [i].[ProtocolType], [i].[RefreshTokenExpiration], [i].[RefreshTokenUsage], [i].[RequireClientSecret], [i].[RequireConsent], [i].[RequirePkce], [i].[SlidingRefreshTokenLifetime], [i].[UpdateAccessTokenClaimsOnRefresh], [i].[UserCodeType], [i].[UserSsoLifetime]
    FROM [IdentityServerClients] AS [i]
    WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND ([i].[ClientId] = @__clientId_0)
) AS [t]
LEFT JOIN [IdentityServerClientGrantTypes] AS [i0] ON [t].[Id] = [i0].[ClientId]
LEFT JOIN [IdentityServerClientRedirectUris] AS [i1] ON [t].[Id] = [i1].[ClientId]
LEFT JOIN [IdentityServerClientPostLogoutRedirectUris] AS [i2] ON [t].[Id] = [i2].[ClientId]
LEFT JOIN [IdentityServerClientScopes] AS [i3] ON [t].[Id] = [i3].[ClientId]
LEFT JOIN [IdentityServerClientSecrets] AS [i4] ON [t].[Id] = [i4].[ClientId]
LEFT JOIN [IdentityServerClientClaims] AS [i5] ON [t].[Id] = [i5].[ClientId]
LEFT JOIN [IdentityServerClientIdPRestrictions] AS [i6] ON [t].[Id] = [i6].[ClientId]
LEFT JOIN [IdentityServerClientCorsOrigins] AS [i7] ON [t].[Id] = [i7].[ClientId]
LEFT JOIN [IdentityServerClientProperties] AS [i8] ON [t].[Id] = [i8].[ClientId]
ORDER BY [t].[Id], [i0].[ClientId], [i0].[GrantType], [i1].[ClientId], [i1].[RedirectUri], [i2].[ClientId], [i2].[PostLogoutRedirectUri], [i3].[ClientId], [i3].[Scope], [i4].[ClientId], [i4].[Type], [i4].[Value], [i5].[ClientId], [i5].[Type], [i5].[Value], [i6].[ClientId], [i6].[Provider], [i7].[ClientId], [i7].[Origin], [i8].[ClientId], [i8].[Key]
2020-03-16 11:14:40.613 +08:00 [DBG] client configuration validation for client XManagement_App succeeded.
2020-03-16 11:14:40.613 +08:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-03-16 11:14:40.613 +08:00 [DBG] Client validation success
2020-03-16 11:14:40.614 +08:00 [INF] {"ClientId":"XManagement_App","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"0HLU9AQP7DMDT:00000002","TimeStamp":"2020-03-16T03:14:40.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-03-16 11:14:40.614 +08:00 [DBG] Start token request validation
2020-03-16 11:14:40.615 +08:00 [DBG] Start resource owner password token request validation
2020-03-16 11:14:40.618 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.629 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:14:40.643 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.686 +08:00 [INF] Executed DbCommand (40ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:14:40.693 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.706 +08:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Emphasize], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i].[Required], [i].[ShowInDiscoveryDocument], [i0].[IdentityResourceId], [i0].[Type]
FROM [IdentityServerIdentityResources] AS [i]
LEFT JOIN [IdentityServerIdentityClaims] AS [i0] ON [i].[Id] = [i0].[IdentityResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND [i].[Name] IN (N'XManagement')
ORDER BY [i].[Id], [i0].[IdentityResourceId], [i0].[Type]
2020-03-16 11:14:40.710 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityServerDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.740 +08:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [i].[Id], [i].[ConcurrencyStamp], [i].[CreationTime], [i].[CreatorId], [i].[DeleterId], [i].[DeletionTime], [i].[Description], [i].[DisplayName], [i].[Enabled], [i].[ExtraProperties], [i].[IsDeleted], [i].[LastModificationTime], [i].[LastModifierId], [i].[Name], [i].[Properties], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i0].[Description], [i0].[Expiration], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[Description], [t].[DisplayName], [t].[Emphasize], [t].[Required], [t].[ShowInDiscoveryDocument], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
FROM [IdentityServerApiResources] AS [i]
LEFT JOIN [IdentityServerApiSecrets] AS [i0] ON [i].[Id] = [i0].[ApiResourceId]
LEFT JOIN [IdentityServerApiClaims] AS [i1] ON [i].[Id] = [i1].[ApiResourceId]
LEFT JOIN (
    SELECT [i2].[ApiResourceId], [i2].[Name], [i2].[Description], [i2].[DisplayName], [i2].[Emphasize], [i2].[Required], [i2].[ShowInDiscoveryDocument], [i3].[ApiResourceId] AS [ApiResourceId0], [i3].[Name] AS [Name0], [i3].[Type]
    FROM [IdentityServerApiScopes] AS [i2]
    LEFT JOIN [IdentityServerApiScopeClaims] AS [i3] ON ([i2].[ApiResourceId] = [i3].[ApiResourceId]) AND ([i2].[Name] = [i3].[Name])
) AS [t] ON [i].[Id] = [t].[ApiResourceId]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([i].[IsDeleted] <> CAST(1 AS bit))) AND EXISTS (
    SELECT 1
    FROM [IdentityServerApiScopes] AS [i4]
    WHERE ([i].[Id] = [i4].[ApiResourceId]) AND [i4].[Name] IN (N'XManagement'))
ORDER BY [i].[Id], [i0].[ApiResourceId], [i0].[Type], [i0].[Value], [i1].[ApiResourceId], [i1].[Type], [t].[ApiResourceId], [t].[Name], [t].[ApiResourceId0], [t].[Name0], [t].[Type]
2020-03-16 11:14:40.748 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.769 +08:00 [INF] Executed DbCommand (12ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-16 11:14:40.787 +08:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AbpUsers] AS [a]
WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[NormalizedUserName] = @__normalizedUserName_0)
2020-03-16 11:14:40.804 +08:00 [INF] Credentials validated for username: Admin@10000.com
2020-03-16 11:14:40.804 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":"Admin@10000.com","Endpoint":"Token","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU9AQP7DMDT:00000002","TimeStamp":"2020-03-16T03:14:40.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-16 11:14:40.811 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.837 +08:00 [INF] Executed DbCommand (23ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:14:40.839 +08:00 [INF] {"Username":"Admin@10000.com","Provider":null,"ProviderUserId":null,"SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","DisplayName":null,"Endpoint":"Token","ClientId":"XManagement_App","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLU9AQP7DMDT:00000002","TimeStamp":"2020-03-16T03:14:40.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-03-16 11:14:40.839 +08:00 [DBG] Resource owner password token request validation success.
2020-03-16 11:14:40.839 +08:00 [INF] Token request validation success, {"ClientId":"XManagement_App","ClientName":"XManagement_App","GrantType":"password","Scopes":"XManagement","AuthorizationCode":null,"RefreshToken":null,"UserName":"Admin@10000.com","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"username":"Admin@10000.com","password":"***REDACTED***","tenanId":"","loading":"false","grant_type":"password","scope":"XManagement","client_id":"XManagement_App","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2020-03-16 11:14:40.839 +08:00 [DBG] Getting claims for access token for client: XManagement_App
2020-03-16 11:14:40.839 +08:00 [DBG] Getting claims for access token for subject: 78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1
2020-03-16 11:14:40.841 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:40.845 +08:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:14:40.856 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ef_filter__p_2='?' (DbType = Boolean), @__ef_filter__p_0='?' (DbType = Boolean), @__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Name]
FROM [AbpUserRoles] AS [a]
INNER JOIN (
    SELECT [a0].[Id], [a0].[ConcurrencyStamp], [a0].[ExtraProperties], [a0].[IsDefault], [a0].[IsPublic], [a0].[IsStatic], [a0].[Name], [a0].[NormalizedName], [a0].[TenantId]
    FROM [AbpRoles] AS [a0]
    WHERE (@__ef_filter__p_2 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t] ON [a].[RoleId] = [t].[Id]
WHERE ((@__ef_filter__p_0 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL) AND ([a].[UserId] = @__id_0)
2020-03-16 11:14:40.861 +08:00 [INF] {"ClientId":"XManagement_App","ClientName":"XManagement_App","RedirectUri":null,"Endpoint":"Token","SubjectId":"78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1","Scopes":"XManagement","GrantType":"password","Tokens":[{"TokenType":"access_token","TokenValue":"****XRtw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLU9AQP7DMDT:00000002","TimeStamp":"2020-03-16T03:14:40.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44379","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-03-16 11:14:40.861 +08:00 [DBG] Token request success.
2020-03-16 11:14:40.862 +08:00 [INF] Request finished in 344.1528ms 200 application/json; charset=UTF-8
2020-03-16 11:14:40.894 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/my-profile  
2020-03-16 11:14:40.895 +08:00 [INF] Successfully validated the token.
2020-03-16 11:14:40.895 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:14:40.899 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:40.901 +08:00 [INF] Route matched with {area = "identity", controller = "Profile", action = "Get", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Identity.ProfileDto] GetAsync() on controller Volo.Abp.Identity.ProfileController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:14:40.987 +08:00 [INF] Executing action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:40.990 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'IdentityDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:41.018 +08:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ef_filter__p_0='?' (DbType = Boolean), @__ef_filter__p_1='?' (DbType = Boolean), @__id_0='?' (DbType = Guid), @__ef_filter__p_3='?' (DbType = Boolean), @__ef_filter__p_5='?' (DbType = Boolean), @__ef_filter__p_7='?' (DbType = Boolean), @__ef_filter__p_9='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[AccessFailedCount], [t].[ConcurrencyStamp], [t].[CreationTime], [t].[CreatorId], [t].[DeleterId], [t].[DeletionTime], [t].[Email], [t].[EmailConfirmed], [t].[ExtraProperties], [t].[IsDeleted], [t].[LastModificationTime], [t].[LastModifierId], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[SecurityStamp], [t].[Surname], [t].[TenantId], [t].[TwoFactorEnabled], [t].[UserName], [t0].[UserId], [t0].[RoleId], [t0].[TenantId], [t1].[UserId], [t1].[LoginProvider], [t1].[ProviderDisplayName], [t1].[ProviderKey], [t1].[TenantId], [t2].[Id], [t2].[ClaimType], [t2].[ClaimValue], [t2].[TenantId], [t2].[UserId], [t3].[UserId], [t3].[LoginProvider], [t3].[Name], [t3].[TenantId], [t3].[Value]
FROM (
    SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[CreationTime], [a].[CreatorId], [a].[DeleterId], [a].[DeletionTime], [a].[Email], [a].[EmailConfirmed], [a].[ExtraProperties], [a].[IsDeleted], [a].[LastModificationTime], [a].[LastModifierId], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[Surname], [a].[TenantId], [a].[TwoFactorEnabled], [a].[UserName]
    FROM [AbpUsers] AS [a]
    WHERE (((@__ef_filter__p_0 = CAST(1 AS bit)) OR ([a].[IsDeleted] <> CAST(1 AS bit))) AND ((@__ef_filter__p_1 = CAST(1 AS bit)) OR [a].[TenantId] IS NULL)) AND ([a].[Id] = @__id_0)
) AS [t]
LEFT JOIN (
    SELECT [a0].[UserId], [a0].[RoleId], [a0].[TenantId]
    FROM [AbpUserRoles] AS [a0]
    WHERE (@__ef_filter__p_3 = CAST(1 AS bit)) OR [a0].[TenantId] IS NULL
) AS [t0] ON [t].[Id] = [t0].[UserId]
LEFT JOIN (
    SELECT [a1].[UserId], [a1].[LoginProvider], [a1].[ProviderDisplayName], [a1].[ProviderKey], [a1].[TenantId]
    FROM [AbpUserLogins] AS [a1]
    WHERE (@__ef_filter__p_5 = CAST(1 AS bit)) OR [a1].[TenantId] IS NULL
) AS [t1] ON [t].[Id] = [t1].[UserId]
LEFT JOIN (
    SELECT [a2].[Id], [a2].[ClaimType], [a2].[ClaimValue], [a2].[TenantId], [a2].[UserId]
    FROM [AbpUserClaims] AS [a2]
    WHERE (@__ef_filter__p_7 = CAST(1 AS bit)) OR [a2].[TenantId] IS NULL
) AS [t2] ON [t].[Id] = [t2].[UserId]
LEFT JOIN (
    SELECT [a3].[UserId], [a3].[LoginProvider], [a3].[Name], [a3].[TenantId], [a3].[Value]
    FROM [AbpUserTokens] AS [a3]
    WHERE (@__ef_filter__p_9 = CAST(1 AS bit)) OR [a3].[TenantId] IS NULL
) AS [t3] ON [t].[Id] = [t3].[UserId]
ORDER BY [t].[Id], [t0].[UserId], [t0].[RoleId], [t1].[UserId], [t1].[LoginProvider], [t2].[Id], [t3].[UserId], [t3].[LoginProvider], [t3].[Name]
2020-03-16 11:14:41.019 +08:00 [INF] Executed action method Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 31.4183ms.
2020-03-16 11:14:41.020 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:41.020 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Identity.ProfileDto'.
2020-03-16 11:14:41.021 +08:00 [INF] Executed action Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi) in 120.1527ms
2020-03-16 11:14:41.021 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.ProfileController.GetAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:14:41.021 +08:00 [INF] Request finished in 127.8062ms 200 application/json; charset=utf-8
2020-03-16 11:14:41.417 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/multi-tenancy/tenants?page=1&size=2000  
2020-03-16 11:14:41.421 +08:00 [INF] Successfully validated the token.
2020-03-16 11:14:41.421 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:14:41.425 +08:00 [INF] Executing endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-16 11:14:41.427 +08:00 [INF] Route matched with {area = "multi-tenancy", action = "GetList", controller = "Tenant", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.TenantManagement.TenantDto]] GetListAsync(Volo.Abp.TenantManagement.GetTenantsInput) on controller Volo.Abp.TenantManagement.TenantController (Volo.Abp.TenantManagement.HttpApi).
2020-03-16 11:14:41.512 +08:00 [INF] Executing action method Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) - Validation state: "Valid"
2020-03-16 11:14:41.518 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:41.518 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpTenantManagement.Tenants
2020-03-16 11:14:41.518 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:41.518 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpTenantManagement.Tenants
2020-03-16 11:14:41.518 +08:00 [INF] Authorization failed.
2020-03-16 11:14:41.544 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:14:41.544 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:14:41.544 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpTenantManagement.Tenants
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:14:41.544 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:14:41.545 +08:00 [INF] Executed action Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi) in 117.9565ms
2020-03-16 11:14:41.545 +08:00 [INF] Executed endpoint 'Volo.Abp.TenantManagement.TenantController.GetListAsync (Volo.Abp.TenantManagement.HttpApi)'
2020-03-16 11:14:41.586 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:14:41.626 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:14:41.630 +08:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:41.635 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:14:41.637 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:41.637 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:14:41.637 +08:00 [INF] Request finished in 219.9651ms 403 application/json; charset=utf-8
2020-03-16 11:19:06.835 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-16 11:19:06.838 +08:00 [INF] Successfully validated the token.
2020-03-16 11:19:06.838 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:19:06.843 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:19:06.845 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:19:06.974 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:19:06.977 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:19:06.977 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:19:06.977 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:19:06.977 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:19:06.977 +08:00 [INF] Authorization failed.
2020-03-16 11:19:06.989 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:19:06.989 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:19:06.989 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:19:06.990 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:19:06.991 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 145.7139ms
2020-03-16 11:19:06.991 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:19:07.010 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:19:07.164 +08:00 [INF] Executed DbCommand (38ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:19:07.174 +08:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:19:07.176 +08:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:19:07.201 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:19:07.201 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:19:07.202 +08:00 [INF] Request finished in 367.2069ms 403 application/json; charset=utf-8
2020-03-16 11:19:13.524 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:9527/api/identity/roles  
2020-03-16 11:19:13.525 +08:00 [INF] Successfully validated the token.
2020-03-16 11:19:13.526 +08:00 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2020-03-16 11:19:13.529 +08:00 [INF] Executing endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:19:13.530 +08:00 [INF] Route matched with {area = "identity", controller = "Role", action = "GetList", page = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Volo.Abp.Identity.IdentityRoleDto]] GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto) on controller Volo.Abp.Identity.IdentityRoleController (Volo.Abp.Identity.HttpApi).
2020-03-16 11:19:13.641 +08:00 [INF] Executing action method Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) - Validation state: "Valid"
2020-03-16 11:19:13.642 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:19:13.643 +08:00 [DBG] Found in the cache: pn:U,pk:78c2eb3b-1cf2-d4f4-53cf-39f3e4ca3fd1,n:AbpIdentity.Roles
2020-03-16 11:19:13.643 +08:00 [DBG] PermissionStore.GetCacheItemAsync: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:19:13.643 +08:00 [DBG] Found in the cache: pn:C,pk:XManagement_App,n:AbpIdentity.Roles
2020-03-16 11:19:13.643 +08:00 [INF] Authorization failed.
2020-03-16 11:19:13.647 +08:00 [WRN] ---------- RemoteServiceErrorInfo ----------
2020-03-16 11:19:13.648 +08:00 [WRN] {
  "code": null,
  "message": "Authorization failed! Given policy has not granted: AbpIdentity.Roles",
  "details": null,
  "validationErrors": null
}
2020-03-16 11:19:13.648 +08:00 [WRN] Authorization failed! Given policy has not granted: AbpIdentity.Roles
Volo.Abp.Authorization.AbpAuthorizationException: Authorization failed! Given policy has not granted: AbpIdentity.Roles
   at Microsoft.AspNetCore.Authorization.AbpAuthorizationServiceExtensions.CheckAsync(IAuthorizationService authorizationService, String policyName)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(IAuthorizeData authorizationAttribute)
   at Volo.Abp.Authorization.MethodInvocationAuthorizationService.CheckAsync(MethodInvocationAuthorizationContext context)
   at Volo.Abp.Authorization.AuthorizationInterceptor.AuthorizeAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Authorization.AuthorizationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2020-03-16 11:19:13.648 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2020-03-16 11:19:13.649 +08:00 [INF] Executed action Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi) in 118.6305ms
2020-03-16 11:19:13.649 +08:00 [INF] Executed endpoint 'Volo.Abp.Identity.IdentityRoleController.GetListAsync (Volo.Abp.Identity.HttpApi)'
2020-03-16 11:19:13.659 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'AbpAuditLoggingDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:19:13.688 +08:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 96), @p2='?' (Size = 512), @p3='?' (Size = 64), @p4='?' (Size = 64), @p5='?' (Size = 128), @p6='?' (Size = 256), @p7='?' (Size = 4000), @p8='?' (Size = 64), @p9='?' (Size = 4000), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (Size = 4000), @p13='?' (Size = 16), @p14='?' (DbType = Int32), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (Size = 4000), @p19='?' (Size = 256), @p20='?' (DbType = Guid), @p21='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogs] ([Id], [ApplicationName], [BrowserInfo], [ClientId], [ClientIpAddress], [ClientName], [Comments], [ConcurrencyStamp], [CorrelationId], [Exceptions], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [HttpMethod], [HttpStatusCode], [ImpersonatorTenantId], [ImpersonatorUserId], [TenantId], [TenantName], [Url], [UserId], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21);
2020-03-16 11:19:13.821 +08:00 [INF] Executed DbCommand (132ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:19:13.852 +08:00 [INF] Executed DbCommand (30ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (Size = 4000), @p5='?' (Size = 128), @p6='?' (Size = 2000), @p7='?' (Size = 256), @p8='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [AbpAuditLogActions] ([Id], [AuditLogId], [ExecutionDuration], [ExecutionTime], [ExtraProperties], [MethodName], [Parameters], [ServiceName], [TenantId])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2020-03-16 11:19:13.859 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:19:13.859 +08:00 [DBG] Added 0 entity changes to the current audit log
2020-03-16 11:19:13.860 +08:00 [INF] Request finished in 336.0906ms 403 application/json; charset=utf-8
2020-03-16 11:22:02.165 +08:00 [INF] Starting LintSense.XManagement.HttpApi.Host.
2020-03-16 11:22:21.031 +08:00 [INF] User profile is available. Using 'C:\Users\Administrator\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-03-16 11:22:21.360 +08:00 [INF] Loaded ABP modules:
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Security.AbpSecurityModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Uow.AbpUnitOfWorkModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Data.AbpDataModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Settings.AbpSettingsModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Localization.AbpLocalizationModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Validation.AbpValidationModule
2020-03-16 11:22:21.360 +08:00 [INF] - Lintsense.Sales.SalesDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - LintSense.XManagement.XManagementDomainSharedModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Timing.AbpTimingModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Json.AbpJsonModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Threading.AbpThreadingModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Auditing.AbpAuditingModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationContractsModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Authorization.AbpAuthorizationModule
2020-03-16 11:22:21.360 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationContractsModule
2020-03-16 11:22:21.360 +08:00 [INF] - Lintsense.Sales.SalesApplicationContractsModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.EventBus.AbpEventBusModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Users.AbpUsersAbstractionModule
2020-03-16 11:22:21.360 +08:00 [INF] - Volo.Abp.Guids.AbpGuidsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Domain.AbpDddDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Http.AbpHttpAbstractionsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Features.AbpFeaturesModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Application.AbpDddApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - LintSense.XManagement.XManagementApplicationContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Minify.AbpMinifyModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Http.AbpHttpModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.UI.AbpUiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Sales.SalesHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Purchasing.PurchasingDomainSharedModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Purchasing.PurchasingApplicationContractsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Purchasing.PurchasingHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Warehouse.WarehouseHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Account.AbpAccountHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.PermissionManagement.HttpApi.AbpPermissionManagementHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Castle.AbpCastleCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Autofac.AbpAutofacModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.AspNetCore.MultiTenancy.AbpAspNetCoreMultiTenancyModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Basic.BasicDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Sales.SalesDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Warehouse.WarehouseDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.AuditLogging.AbpAuditLoggingDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.AutoMapper.AbpAutoMapperModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.BackgroundJobs.AbpBackgroundJobsDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Serialization.AbpSerializationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Caching.AbpCachingModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Users.AbpUsersDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.PermissionManagement.Identity.AbpPermissionManagementDomainIdentityModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.IdentityServer.AbpIdentityServerDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.PermissionManagement.IdentityServer.AbpPermissionManagementDomainIdentityServerModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.SettingManagement.AbpSettingManagementDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - LintSense.XManagement.XManagementDomainModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.FluentValidation.AbpFluentValidationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Sales.SalesApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Warehouse.WarehouseApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.PermissionManagement.AbpPermissionManagementApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Identity.AbpIdentityApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Account.AbpAccountApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.TenantManagement.AbpTenantManagementApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.FeatureManagement.AbpFeatureManagementApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - LintSense.XManagement.XManagementApplicationModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.AbpEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Basic.EntityFrameworkCore.BasicEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Warehouse.EntityFrameworkCore.WarehouseEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Lintsense.Sales.EntityFrameworkCore.SalesEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Users.EntityFrameworkCore.AbpUsersEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.Identity.EntityFrameworkCore.AbpIdentityEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.IdentityServer.EntityFrameworkCore.AbpIdentityServerEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.PermissionManagement.EntityFrameworkCore.AbpPermissionManagementEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.SettingManagement.EntityFrameworkCore.AbpSettingManagementEntityFrameworkCoreModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.EntityFrameworkCore.SqlServer.AbpEntityFrameworkCoreSqlServerModule
2020-03-16 11:22:21.361 +08:00 [INF] - Volo.Abp.BackgroundJobs.EntityFrameworkCore.AbpBackgroundJobsEntityFrameworkCoreModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AuditLogging.EntityFrameworkCore.AbpAuditLoggingEntityFrameworkCoreModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.TenantManagement.EntityFrameworkCore.AbpTenantManagementEntityFrameworkCoreModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.FeatureManagement.EntityFrameworkCore.AbpFeatureManagementEntityFrameworkCoreModule
2020-03-16 11:22:21.362 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreModule
2020-03-16 11:22:21.362 +08:00 [INF] - LintSense.XManagement.EntityFrameworkCore.XManagementEntityFrameworkCoreDbMigrationsModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.AbpAspNetCoreMvcUiModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bootstrap.AbpAspNetCoreMvcUiBootstrapModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Packages.AbpAspNetCoreMvcUiPackagesModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Widgets.AbpAspNetCoreMvcUiWidgetsModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.AbpAspNetCoreMvcUiThemeSharedModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.MultiTenancy.AbpAspNetCoreMvcUiMultiTenancyModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.AbpAspNetCoreMvcUiBasicThemeModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.Identity.AspNetCore.AbpIdentityAspNetCoreModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.Account.Web.AbpAccountWebIdentityServerModule
2020-03-16 11:22:21.362 +08:00 [INF] - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2020-03-16 11:22:21.362 +08:00 [INF] - LintSense.XManagement.XManagementHttpApiHostModule
2020-03-16 11:22:22.508 +08:00 [DBG] Started background worker: Volo.Abp.IdentityServer.Tokens.TokenCleanupBackgroundWorker
2020-03-16 11:22:22.606 +08:00 [INF] Starting IdentityServer4 version 3.0.2.0
2020-03-16 11:22:24.048 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-03-16 11:22:24.048 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-03-16 11:22:24.048 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-03-16 11:22:24.048 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-03-16 11:22:24.048 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-03-16 11:22:24.049 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-03-16 11:22:25.951 +08:00 [INF] Initialized all ABP modules.
2020-03-16 11:22:26.190 +08:00 [INF] Now listening on: http://localhost:44379
2020-03-16 11:22:26.190 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-03-16 11:22:26.190 +08:00 [INF] Hosting environment: Development
2020-03-16 11:22:26.190 +08:00 [INF] Content root path: F:\Project\lintsense-xmanagement.api\application\src\LintSense.XManagement.HttpApi.Host
2020-03-16 11:22:27.187 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/  
2020-03-16 11:22:27.323 +08:00 [DBG] Login Url: /Account/Login
2020-03-16 11:22:27.323 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-03-16 11:22:27.323 +08:00 [DBG] Logout Url: /Account/Logout
2020-03-16 11:22:27.323 +08:00 [DBG] ConsentUrl Url: /consent
2020-03-16 11:22:27.323 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-03-16 11:22:27.323 +08:00 [DBG] Error Url: /home/error
2020-03-16 11:22:27.323 +08:00 [DBG] Error Id Parameter: errorId
2020-03-16 11:22:27.364 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:22:30.370 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:22:32.071 +08:00 [INF] Executed DbCommand (202ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:22:32.349 +08:00 [INF] Entity Framework Core 3.1.0 initialized 'SettingManagementDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-03-16 11:22:32.377 +08:00 [INF] Executed DbCommand (7ms) [Parameters=[@__name_0='?' (Size = 128), @__providerName_1='?' (Size = 64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Name], [a].[ProviderKey], [a].[ProviderName], [a].[Value]
FROM [AbpSettings] AS [a]
WHERE (([a].[Name] = @__name_0) AND ([a].[ProviderName] = @__providerName_1)) AND [a].[ProviderKey] IS NULL
2020-03-16 11:22:32.473 +08:00 [INF] Executing endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-16 11:22:32.580 +08:00 [INF] Route matched with {action = "Index", controller = "Home", area = "", page = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ActionResult Index() on controller LintSense.XManagement.Controllers.HomeController (LintSense.XManagement.HttpApi.Host).
2020-03-16 11:22:32.750 +08:00 [INF] Executing action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) - Validation state: "Valid"
2020-03-16 11:22:32.758 +08:00 [INF] Executed action method LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host), returned result Microsoft.AspNetCore.Mvc.RedirectResult in 0.4951ms.
2020-03-16 11:22:32.767 +08:00 [INF] Executing RedirectResult, redirecting to /swagger.
2020-03-16 11:22:32.776 +08:00 [INF] Executed action LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host) in 188.9575ms
2020-03-16 11:22:32.776 +08:00 [INF] Executed endpoint 'LintSense.XManagement.Controllers.HomeController.Index (LintSense.XManagement.HttpApi.Host)'
2020-03-16 11:22:32.810 +08:00 [INF] Request finished in 5628.2427ms 302 
2020-03-16 11:22:32.877 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/index.html  
2020-03-16 11:22:32.926 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:22:33.024 +08:00 [INF] Request finished in 147.0735ms 200 text/html;charset=utf-8
2020-03-16 11:22:33.422 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:44379/swagger/v1/swagger.json  
2020-03-16 11:22:33.429 +08:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2020-03-16 11:22:33.955 +08:00 [INF] Request finished in 533.6133ms 200 application/json;charset=utf-8
